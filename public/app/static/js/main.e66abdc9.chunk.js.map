{"version":3,"sources":["app/message/handleSocketEvents.jsx","cache.jsx","classes/server/index.jsx","icons/plus.jsx","icons/bones.jsx","global/input.jsx","icons/settings.jsx","utils.js","app/animate.jsx","app/message/statusManager/setCustomStatus.jsx","app/message/statusManager/index.jsx","global/avatar.jsx","classes/user/footer.jsx","classes/message/invite.jsx","icons/3dots.jsx","classes/message/delete-message.jsx","classes/message/menu.jsx","classes/message/attachment.jsx","classes/message/message.jsx","classes/message/messagesMapper.jsx","icons/hashtag.jsx","app/message/findConversation/index.jsx","app/message/sendMessage.jsx","global/createBlob.jsx","app/message/attachmentManager/index.jsx","global/toBase64.jsx","app/message/home.jsx","classes/user/profile.jsx","classes/user/user.jsx","icons/crown.jsx","classes/user/member.jsx","classes/user/index.jsx","classes/message/index.jsx","classes/channel/channel.jsx","classes/channel/index.jsx","icons/members.jsx","icons/down.jsx","classes/server/invite-people.jsx","classes/server/server-editor.jsx","classes/channel/create-channel.jsx","app/message/message.jsx","icons/home.jsx","classes/server/addServer.jsx","global/imageCropper.jsx","global/editImage.jsx","global/isGif.jsx","classes/user/user-settings.jsx","app/masks.jsx","app/message/index.jsx","app/signup/index.jsx","app/login/index.jsx","app/index.jsx","index.js"],"names":["handleSocketEvents","message","setMessages","msg","prev","memberOnline","setMembers","user","members","list","member","find","m","_id","online","memberUpdate","messages","forEach","author","updatedUser","Object","assign","messageEdit","indexOf","messageDelete","filter","userCache","Map","cacheUser","items","type","has","set","cacheUserFromMessages","cacheUserFromMembers","PreviousQueries","channels","serverMembers","logs","setLogs","fn","at","key","fct","channelsIds","keys","length","Math","floor","random","Set","init","messageEvent","channel","messageDeleteEvent","ch","some","messageEditEvent","id","editMessage","DMEvent","dms","dmFor","name","includes","memberUpdateEvent","get","onlineEvent","clear","socket","on","off","this","Server","server","me","width","height","icon","link","clicked","click","className","title","tabIndex","role","onClick","alt","src","displayIcon","style","a","fetch","headers","Authorization","token","then","res","json","catch","servers","isHome","index","map","s","i","toJSX","reverse","Plus","props","fill","size","version","x","y","viewBox","d","Skeleton","display","SkeletonLoadingMessage","Array","_","setSelection","containerEl","savedSel","charIndex","range","document","createRange","setStart","collapse","node","nodeStack","foundStart","stop","pop","nodeType","nextCharIndex","start","end","setEnd","childNodes","push","sel","window","getSelection","removeAllRanges","addRange","getScrollParent","overflowY","scrollHeight","clientHeight","parentNode","Input","renderId","placeholder","defaultValue","innerRef","onPaste","onKeyDown","divRef","useRef","add","el","text","savedSelection","newText","getRangeAt","preSelectionRange","cloneRange","selectNodeContents","startContainer","startOffset","pos","saveSelection","textContent","slice","scrollToBottom","element","firstScrollableParent","scrollTop","useEffect","input","current","lastChild","focus","ref","e","preventDefault","clipboardData","getData","target","onDrop","dataTransfer","code","innerHTML","ctrlKey","shiftKey","suppressContentEditableWarning","contentEditable","Gear","Utils","Out","children","getEvent","wrapperRef","handleClickOutside","event","contains","addEventListener","removeEventListener","useOutsideAlerter","isScolled","holder","body","getBoundingClientRect","top","bottom","holderRect","Animate","useState","animation","setAnimation","setView","useContext","ScreenContext","normal","setTimeout","quit","CustomStatus","inputRef","buttonRef","onSubmit","htmlFor","username","toUpperCase","marginBottom","status","method","JSON","stringify","customStatus","setCustomStatus","value","StatusManager","User","left","transformOrigin","Status","w","rx","r","cx","cy","strokeWidth","stroke","Avatar","mask","Footer","setShowSettings","displayAvatarURL","tag","Invite","invite","onJoin","state","setState","Dots","opacity","transform","MessageDelete","onCancel","full","delete","Menu","clickOut","edit","setTop","useLayoutEffect","viewportOffset","innerHeight","deleteE","audio","SpeechSynthesisUtterance","content","speechSynthesis","speak","navigator","clipboard","writeText","Attachment","bg","setBg","attachment","URL","onLoad","loading","calculateImage","displayAttachmentURL","Text","isBeingEdited","setIsBeingEdited","edited","maxHeight","k","unsent","failed","Date","updatedAt","toDateString","MessageJSX","setClicked","innerWidth","triggerEdit","ifEmptyDelete","dispatchEvent","KeyboardEvent","getTime","timestamp","listener","marginTop","getHours","padStart","getMinutes","createdAt","innerText","trim","inviteCode","zIndex","Messages","mapped","Message","$","Fragment","Hashtag","MapLogs","l","log","borderRadius","MapChannels","c","Channel","MapServers","setServer","FindConversation","clickUser","setFilter","onChange","createMessage","attachments","setAttachments","done","now","data","send","update","allMessages","ms","err","console","error","createBlob","base64str","contentType","byteCharacters","atob","byteNumbers","charCodeAt","byteArray","Uint8Array","Blob","Attachments","fileName","blob","split","url","createObjectURL","position","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","img","Image","result","onerror","users","u","received","Friends","friends","setFriends","isMounted","f","Add","setValue","setText","sendRequest","ok","color","autoComplete","maxLength","Pending","requests","setRequests","DM","dm","isLoading","setIsLoading","sendMessage","useCallback","newOrder","splice","findIndex","dmEvent","getImageFromInput","files","Home","button","setButton","Dm","setDm","clickEvent","screen","setScreen","not","notifications","setNotifications","n","background","UserInfo","padding","boxSizing","localStorage","getItem","setItem","All","Profile","mutualServers","backgroundImage","profileColor","backgroundColor","UserJSX","editable","cachedUser","Update","seconds","setSeconds","setOnline","handleOnlineEvent","timer","setInterval","clearInterval","fakeEvent","overflow","owner","toFixed","Crown","enableBackground","xmlSpace","points","MemberJSX","isClicked","setIsClicked","right","animationName","avatarURL","response","onlineLength","offlineLength","offline","sortedMembers","sort","b","localeCompare","Member","view","jsx","concat","date","minutes","getSeconds","getMilliseconds","toLocaleDateString","formatDate","query","trunc","match","ChannelJSX","components","emit","LoadChannels","MemberLoading","times","Down","strokeLinecap","strokeLinejoin","InvitePeople","ids","setIds","copied","setCopied","toLowerCase","invites","readOnly","EditServer","setSrc","setName","handleFileChange","CreateChannel","settings","setSettings","waiting","setWaiting","selfAnimate","create","textAlign","fontSize","Main","setChannel","fetchMembers","join","fetchMessages","messageListener","messageDeleteListener","editListener","memberUpdateListener","sendImage","getImageFromPaste","getAsFile","dropFile","stopPropagation","skeleton","setSkeleton","menu","setMenu","IP","leave","createNewChannel","serverSettings","onDragOver","toTitle","MapMembers","EmbedHomeButton","gradientUnits","x1","y1","x2","y2","offset","stopColor","onCreate","Creator","defaultName","image","setImage","handleChange","del","createServer","required","marginRight","marginLeft","ImageCropper","canvasRef","rangeRef","lastPoint","setSize","canvasSize","useMemo","coordinates","isDragging","calculator","canvas","maxSize","min","imgToSize","ctx","getContext","draw","factor","radius","limitX","limitY","minX","maxX","minY","maxY","clearRect","beginPath","drawImage","requestAnimationFrame","handleMouseUp","onMouseOut","onMouseUp","onMouseDown","onMouseMove","clientX","clientY","max","SubComponent","onComplete","cancel","setData","maxWidth","toDataURL","isGif","EditUsername","newName","setNewName","flexDirection","MyAccount","changes","email","UserProfile","setColor","fileInput","colorInput","handleInputChange","complete","oldUser","visibility","accept","Appearance","setTheme","currentTheme","setCurrentTheme","switchTo","theme","Render","componentId","UserSettings","setUser","setChanges","getButton","btn","Masks","maskContentUnits","createContext","io","transports","notificationSound","Audio","showSettings","saved","setServers","connect","notification","play","disconnect","handlenewServer","sv","toString","providerValue","Provider","LoadServers","iserver","Signup","shrink","setError","password","confirmPassword","dataPassword","dataEmail","Login","expand","App","href","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.e66abdc9.chunk.js","sourcesContent":["const handleSocketEvents = {\r\n    message(setMessages, msg) {\r\n        setMessages(prev => [...prev, msg])\r\n    },\r\n    memberOnline(setMembers, user) {\r\n        setMembers(members => {\r\n            const list = [...members]\r\n            const member = list.find(m => m._id === user.user)\r\n            if (member) member.online = user.online\r\n            return list\r\n        })\r\n    },\r\n    memberUpdate(setMembers, setMessages, user) {\r\n        setMessages(prev => {\r\n            const messages = [...prev]\r\n            messages.forEach(m => {\r\n                if (`${user._id}` === m.author._id) {\r\n                    const updatedUser = Object.assign(m.author, user)\r\n                    m.author = updatedUser\r\n                }\r\n            })\r\n            return messages\r\n        })\r\n        setMembers(prev => {\r\n            const members = [...prev]\r\n            members.forEach(m => {\r\n                if (`${user._id}` === m._id) {\r\n                    const updatedUser = Object.assign(m, user)\r\n                    m = updatedUser\r\n                }\r\n            })\r\n            return members\r\n        })\r\n    },\r\n    messageEdit(setMessages, msg) {\r\n        setMessages(prev => {\r\n            const list = [...prev]\r\n            const message = list.find(m => m._id === msg._id)\r\n            list[list.indexOf(message)] = Object.assign(message, msg)\r\n            return list\r\n        })\r\n    },\r\n    messageDelete(setMessages, msg) {\r\n        setMessages(prev => [...prev].filter(m => m._id !== msg._id))\r\n    }\r\n}\r\n\r\nexport default handleSocketEvents","import { socket } from \"./app/message\"\r\nimport handleSocketEvents from \"./app/message/handleSocketEvents\"\r\n\r\nconst userCache = new Map()\r\n\r\nconst cacheUserFromMessages = (messages) => {\r\n    for (const message of messages) {\r\n        if (!userCache.has(message.author._id)) userCache.set(message.author._id, message.author)\r\n    }\r\n}\r\n\r\nconst cacheUserFromMembers = (members) => {\r\n    for (const member of members) {\r\n        if (!userCache.has(member._id)) userCache.set(member._id, member)\r\n    }\r\n}\r\n\r\nconst cacheUser = (items, type) => {\r\n    if (type === \"channels\") cacheUserFromMessages(items)\r\n    if (type === \"serverMembers\" || type === \"logs\") cacheUserFromMembers(items)\r\n}\r\n\r\nconst PreviousQueries = {\r\n    channels: {},\r\n    serverMembers: {},\r\n    logs: [],\r\n    setLogs(fn) {\r\n        if (typeof fn === \"function\") {\r\n            cacheUser(fn(PreviousQueries.logs || []), \"serverMembers\")\r\n            return PreviousQueries.logs = fn(PreviousQueries.logs || [])\r\n        }\r\n        cacheUser(fn, \"serverMembers\")\r\n        PreviousQueries.logs = fn\r\n    },\r\n    at(type, key) {\r\n        return (fct) => {\r\n            const channelsIds = Object.keys(this.channels)\r\n            if (channelsIds.length > 9) {\r\n                delete this.channels[channelsIds[Math.floor(Math.random() * channelsIds.length)]]\r\n            }\r\n            if (typeof fct === \"function\") {\r\n                cacheUser(fct(this[type][key] || []), type)\r\n                return this[type][key] = [...(new Set(fct(this[type][key] || [])))]\r\n            }\r\n            cacheUser(fct, type)\r\n            this[type][key] = fct\r\n        }\r\n    },\r\n    init() {\r\n        const messageEvent = msg => {\r\n            const setMessages = PreviousQueries.at(\"channels\", msg.channel)\r\n            handleSocketEvents.message(setMessages, msg)\r\n        }\r\n        const messageDeleteEvent = msg => {\r\n            const channels = Object.keys(this.channels)\r\n            const channel = channels.find(ch => {\r\n                return this.channels[ch].some(m => m._id === msg._id)\r\n            })\r\n            if (channel) {\r\n                const setMessages = PreviousQueries.at(\"channels\", channel)\r\n                handleSocketEvents.messageDelete(setMessages, msg)\r\n            }\r\n        }\r\n        const messageEditEvent = msg => {\r\n            const editMessage = (id) => {\r\n                const setMessages = PreviousQueries.at(\"channels\", id)\r\n                handleSocketEvents.messageEdit(setMessages, msg)\r\n            }\r\n            const channels = Object.keys(this.channels)\r\n            const channel = channels.find(ch => {\r\n                return this.channels[ch].some(m => m._id === msg._id)\r\n            })\r\n            if (channel) editMessage(channel)\r\n        }\r\n        const DMEvent = msg => {\r\n            const dms = Object.keys(this.channels)\r\n            const user = msg.dmFor.find(name => dms.includes(name))\r\n            const setMessages = PreviousQueries.at(\"channels\", user)\r\n            handleSocketEvents.message(setMessages, msg)\r\n        }\r\n        const memberUpdateEvent = member => {\r\n            if (!userCache.has(member._id)) return\r\n            const user = userCache.get(member._id)\r\n            userCache.set(member._id, Object.assign(user, member))\r\n        }\r\n        const onlineEvent = member => {\r\n            if (!userCache.has(member.user)) return\r\n            const user = userCache.get(member.user)\r\n            user.online = member.online\r\n        }\r\n        const clear = () => this.clear()\r\n        socket.on(\"message\", messageEvent)\r\n        socket.on(\"messageDelete\", messageDeleteEvent)\r\n        socket.on(\"dm\", DMEvent)\r\n        socket.on(\"messageEdit\", messageEditEvent)\r\n        socket.on(\"memberUpdate\", memberUpdateEvent)\r\n        socket.on(\"online\", onlineEvent)\r\n        socket.on(\"disconnect\", clear)\r\n        return () => {\r\n            socket.off(\"message\", messageEvent)\r\n                .off(\"messageDelete\", messageDeleteEvent)\r\n                .off(\"dm\", DMEvent)\r\n                .off(\"messageEdit\", messageEditEvent)\r\n                .off(\"memberUpdate\", memberUpdateEvent)\r\n                .off(\"online\", onlineEvent)\r\n                .off(\"disconnect\", clear)\r\n        }\r\n    },\r\n    clear() {\r\n        this.channels = {}\r\n        this.logs = []\r\n        this.serverMembers = {}\r\n    },\r\n    userCache\r\n}\r\n\r\nexport default PreviousQueries","import \"./index.css\"\r\nimport { link } from \"../../config.json\"\r\nimport PreviousQueries from \"../../cache\"\r\n\r\nclass Server {\r\n    constructor(server, user) {\r\n        for (const key in server) {\r\n            this[key] = server[key]\r\n        }\r\n        this.id = server._id\r\n        this.me = user\r\n    }\r\n    static LoadServers({ servers, click, isHome, me, index }) {\r\n        const jsx = servers.map((s, i) => {\r\n            const server = new Server(s, me)\r\n            return server.toJSX(index === i && !isHome, () => {\r\n                click(server)\r\n            })\r\n        })\r\n        return jsx.reverse()\r\n    }\r\n    displayIcon(width, height) {\r\n        if (!this.icon) return `${link}images/default`\r\n        return `${link + this.icon}?${width ? `width=${width}&height=${height || width}` : \"\"}`\r\n    }\r\n    toJSX(clicked, click) {\r\n        return (\r\n            <div key={this.id} className={`server-block ${clicked && \"clicked\"}`}>\r\n                <div title={this.name} tabIndex=\"0\" role=\"button\" className=\"server\">\r\n                    {this.icon ?\r\n                        <img width=\"48\" height=\"48\" onClick={click} alt=\"icon\" src={this.displayIcon(100)} className=\"server-icon\" /> :\r\n                        <div onClick={click} style={{ width: 48, height: 48 }} className=\"server-icon default-no-img-div\">{this.name[0]}</div>\r\n                    }\r\n                </div>\r\n                <div className=\"server-marker\" />\r\n            </div>\r\n        )\r\n    }\r\n    async fetchMembers() {\r\n        if (PreviousQueries.serverMembers[this.id]) return PreviousQueries.serverMembers[this.id]\r\n        const members = await fetch(`${link}servers/${this.id}/members`, {\r\n            headers: { Authorization: this.me.token }\r\n        })\r\n            .then(res => res.json())\r\n            .catch(() => [])\r\n        const setMembers = PreviousQueries.at(\"serverMembers\", this.id)\r\n        setMembers(members)\r\n        return members\r\n    }\r\n}\r\n\r\nexport default Server","const Plus = (props) => {\r\n    return (\r\n        <svg {...props} fill=\"currentColor\" width={props.size} height={props.size} version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 60.364 60.364\">\r\n            <g>\r\n                <path d=\"M54.454,23.18l-18.609-0.002L35.844,5.91C35.845,2.646,33.198,0,29.934,0c-3.263,0-5.909,2.646-5.909,5.91v17.269\r\n\t\tL5.91,23.178C2.646,23.179,0,25.825,0,29.088c0.002,3.264,2.646,5.909,5.91,5.909h18.115v19.457c0,3.267,2.646,5.91,5.91,5.91\r\n\t\tc3.264,0,5.909-2.646,5.91-5.908V34.997h18.611c3.262,0,5.908-2.645,5.908-5.907C60.367,25.824,57.718,23.178,54.454,23.18z\"/>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Plus","const Skeleton = () => {\r\n    return (\r\n        <div className=\"skeleton\">\r\n            <div className=\"skeleton-pfp\"></div>\r\n            <div style={{ width: Math.floor(Math.random() * 100) + 100 }} className=\"skeleton-username\"></div>\r\n            <div>\r\n                <div style={{ width: \"calc(20% - 70px/4)\" }} className=\"skeleton-content-1 sl\"></div>\r\n                <div style={{ width: \"calc(30% - 70px/4)\" }} className=\"skeleton-content-2 sl\"></div>\r\n                <div style={{ width: \"calc(15% - 70px/4)\" }} className=\"skeleton-content-3 sl\"></div>\r\n                <div style={{ width: \"calc(25% - 70px/4)\" }} className=\"skeleton-content-4 sl\"></div>\r\n            </div>\r\n            {Math.random() < 0.4 &&\r\n                <div className=\"random-sl\">\r\n                    <div style={{ width: \"calc(25% - 70px/4)\", display: \"inline-block\" }} className=\"skeleton-content-1 sl\"></div>\r\n                    <div style={{ width: \"calc(20% - 70px/4)\", display: \"inline-block\" }} className=\"skeleton-content-2 sl\"></div>\r\n                    <div style={{ width: \"calc(30% - 70px/4)\", display: \"inline-block\" }} className=\"skeleton-content-3 sl\"></div>\r\n                    <div style={{ width: \"calc(15% - 70px/4)\", display: \"inline-block\" }} className=\"skeleton-content-4 sl\"></div>\r\n                </div>\r\n            }\r\n            {Math.random() < 0.1 && <div className=\"skeleton-content-a\"></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function SkeletonLoadingMessage() {\r\n    return [...Array(20)].map((_, i) => <Skeleton key={i} />)\r\n}","import { useEffect, useRef } from \"react\"\r\n\r\nconst saveSelection = (containerEl, newText) => {\r\n    const range = window.getSelection().getRangeAt(0)\r\n    const preSelectionRange = range.cloneRange();\r\n    preSelectionRange.selectNodeContents(containerEl)\r\n    preSelectionRange.setEnd(range.startContainer, range.startOffset)\r\n    const start = `${preSelectionRange}`.length\r\n\r\n    return {\r\n        start: start + newText.length,\r\n        end: start + `${range}`.length + newText.length,\r\n        pos: [start, `${range}`.length + start]\r\n    }\r\n}\r\n\r\nconst setSelection = (containerEl, savedSel) => {\r\n    let charIndex = 0\r\n    let range = document.createRange();\r\n    range.setStart(containerEl, 0);\r\n    range.collapse(true);\r\n    let nodeStack = [containerEl]\r\n    let node\r\n    let foundStart = false\r\n    let stop = false\r\n\r\n    while (!stop && (node = nodeStack.pop())) {\r\n        if (node.nodeType === 3) {\r\n            const nextCharIndex = charIndex + node.length;\r\n            if (!foundStart && savedSel.start >= charIndex && savedSel.start <= nextCharIndex) {\r\n                range.setStart(node, savedSel.start - charIndex)\r\n                foundStart = true\r\n            }\r\n            if (foundStart && savedSel.end >= charIndex && savedSel.end <= nextCharIndex) {\r\n                range.setEnd(node, savedSel.end - charIndex)\r\n                stop = true\r\n            }\r\n            charIndex = nextCharIndex\r\n        } else {\r\n            let i = node.childNodes.length\r\n            while (i--) {\r\n                nodeStack.push(node.childNodes[i])\r\n            }\r\n        }\r\n    }\r\n\r\n    const sel = window.getSelection()\r\n    sel.removeAllRanges()\r\n    sel.addRange(range)\r\n}\r\n\r\nconst getScrollParent = node => {\r\n    if (!node) return\r\n    if (node.style?.overflowY === \"auto\") return node\r\n    if (node.scrollHeight > node.clientHeight) return node\r\n    return getScrollParent(node.parentNode)\r\n}\r\n\r\nconst Input = ({ renderId, placeholder, defaultValue, innerRef, onPaste, onKeyDown, ...props }) => {\r\n    const divRef = useRef()\r\n    const add = (el, text) => {\r\n        const savedSelection = saveSelection(el, text)\r\n        el.textContent = el.textContent.slice(0, savedSelection.pos[0]) + text + el.textContent.slice(savedSelection.pos[1])\r\n        setSelection(el, savedSelection)\r\n    }\r\n\r\n    const scrollToBottom = element => {\r\n        const firstScrollableParent = getScrollParent(element)\r\n        if (firstScrollableParent) firstScrollableParent.scrollTop = firstScrollableParent.scrollHeight\r\n    }\r\n\r\n    const handlePaste = (e) => {\r\n        e.preventDefault()\r\n        const text = e.clipboardData.getData(\"text\")\r\n        if (text) add(e.target, text)\r\n        onPaste?.(e)\r\n        scrollToBottom(e.target)\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.code === \"Backspace\" && e.target.textContent.length <= 1) e.target.innerHTML = \"\"\r\n        if (e.key === \"z\" && e.ctrlKey && !e.shiftKey) return\r\n        if (e.code === \"Enter\" && e.shiftKey) return\r\n        onKeyDown?.(e)\r\n        scrollToBottom(e.target)\r\n    }\r\n\r\n    const handleDrop = e => {\r\n        e.preventDefault()\r\n        const text = e.dataTransfer.getData(\"text/plain\")\r\n        e.target.textContent = e.target.textContent + text\r\n        setSelection(e.target, { start: e.target.textContent.length - text.length, end: e.target.textContent.length })\r\n        scrollToBottom(e.target)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const input = divRef.current.lastChild\r\n        input.focus()\r\n        setSelection(input, { start: input.textContent.length, end: input.textContent.length })\r\n    }, [renderId])\r\n\r\n    return (\r\n        <div\r\n            ref={divRef}\r\n            className=\"not-input\"\r\n            onPaste={handlePaste}\r\n            onDrop={handleDrop}\r\n            onKeyDown={handleKeyDown}\r\n            role=\"textbox\"\r\n            {...props}>\r\n            <div ref={innerRef} suppressContentEditableWarning={true} placeholder={placeholder} contentEditable=\"true\" className=\"plain-text\">\r\n                {defaultValue}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","const Gear = ({ width, height }) => {\r\n\treturn (\r\n\t\t<svg fill=\"currentColor\" width={width} height={height} x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\r\n\t\t\t<g>\r\n\t\t\t\t<g>\r\n\t\t\t\t\t<path d=\"M495.304,205.913h-45.519c-4.73-18.267-11.996-35.493-21.382-51.291l33.961-33.961c6.487-6.492,6.516-17.095,0-23.611\r\n\t\t\tL414.95,49.633c-6.521-6.521-17.093-6.521-23.613,0l-33.959,33.961c-15.797-9.385-33.024-16.649-51.291-21.382V16.696\r\n\t\t\tC306.087,7.477,298.572,0,289.391,0h-66.783c-9.18,0-16.696,7.477-16.696,16.696v45.517c-18.265,4.73-35.493,11.992-51.291,21.379\r\n\t\t\tl-33.959-33.959c-6.521-6.521-17.093-6.521-23.613,0L49.635,97.05c-6.521,6.52-6.52,17.089,0,23.611l33.961,33.961\r\n\t\t\tc-9.385,15.799-16.651,33.024-21.382,51.291H16.696C7.515,205.913,0,213.39,0,222.609v66.783c0,9.214,7.482,16.693,16.696,16.693\r\n\t\t\th45.519c4.73,18.267,11.996,35.493,21.382,51.291l-33.961,33.961c-6.521,6.52-6.52,17.089,0,23.611l47.415,47.417\r\n\t\t\tc6.527,6.527,17.084,6.525,23.613,0l33.959-33.959c15.797,9.387,33.026,16.647,51.291,21.379v45.519\r\n\t\t\tc0,9.214,7.482,16.696,16.696,16.696h66.783c9.157,0,16.696-7.463,16.696-16.696v-45.519c18.265-4.73,35.493-11.992,51.291-21.379\r\n\t\t\tl33.959,33.959c6.527,6.527,17.084,6.525,23.613,0l47.415-47.417c6.487-6.492,6.516-17.095,0-23.611l-33.961-33.961\r\n\t\t\tc9.385-15.799,16.651-33.024,21.382-51.291h45.519c9.214,0,16.696-7.481,16.696-16.693v-66.783\r\n\t\t\tC512,213.447,504.54,205.913,495.304,205.913z M256,339.476c-46.08-0.029-83.449-37.396-83.478-83.476\r\n\t\t\tc0.029-46.082,37.398-83.449,83.478-83.478c46.08,0.029,83.449,37.396,83.478,83.478C339.449,302.08,302.08,339.448,256,339.476z\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</g>\r\n\t\t\t</g>\r\n\t\t</svg>\r\n\t)\r\n}\r\n\r\nexport default Gear","import React, { useRef, useEffect } from \"react\";\r\n\r\nfunction useOutsideAlerter(ref, e, getEvent) {\r\n    useEffect(() => {\r\n\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                if (getEvent) return e(event)\r\n                e?.()\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref, e, getEvent]);\r\n}\r\n\r\nconst Utils = {\r\n    Out({ click, children, getEvent}) {\r\n        const wrapperRef = useRef(null);\r\n        useOutsideAlerter(wrapperRef, click, getEvent);\r\n        return <div className=\"outer-div\" ref={wrapperRef}>{children}</div>;\r\n    },\r\n    isScolled(el, holder) {\r\n        holder = holder || document.body\r\n        const { top, bottom, height } = el.getBoundingClientRect()\r\n        const holderRect = holder.getBoundingClientRect()\r\n\r\n        return top <= holderRect.top\r\n            ? holderRect.top - top <= height\r\n            : bottom - holderRect.bottom <= height\r\n    }\r\n}\r\n\r\nexport default Utils","import { useState, useContext } from \"react\"\r\nimport Utils from \"../utils\"\r\nimport { ScreenContext } from \"./message\"\r\n\r\nconst Animate = (props) => {\r\n    const [animation, setAnimation] = useState(props.type === 1 ? \"taller\" : \"bigger\")\r\n    const { setView } = useContext(ScreenContext)\r\n    const click = () => {\r\n        setAnimation(props.type === 1 ? \"shorter\" : \"smaller\")\r\n        setTimeout(() => setView(), 100)\r\n        props.quit?.()\r\n    }\r\n    return (\r\n        <div className={`${!props.normal ? \"dark-div\" : \"clear-div\"} ${animation}`}>\r\n            <Utils.Out click={click}>\r\n                {props.children}\r\n            </Utils.Out>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Animate","import { useContext, useRef } from \"react\"\r\nimport { ScreenContext } from \"..\"\r\nimport Animate from \"../../animate\"\r\nimport { link } from \"../../../config.json\"\r\n\r\nconst setCustomStatus = (user, status) => {\r\n    fetch(`${link}customstatus`, {\r\n        method: \"PATCH\", \r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: user.token\r\n        },\r\n        body: JSON.stringify({\r\n            customStatus: status\r\n        })\r\n    })\r\n}\r\n\r\n\r\nconst CustomStatus = () => {\r\n    const { user, setView } = useContext(ScreenContext)\r\n    const inputRef = useRef()\r\n    const buttonRef = useRef()\r\n    const save = () => {\r\n        setCustomStatus(user, inputRef.current.value)\r\n        setView()\r\n    }\r\n    const submit = e => {\r\n        e.preventDefault()\r\n        buttonRef.current.click()\r\n    }\r\n\r\n    return (\r\n        <Animate>\r\n            <div className=\"generic-popup animated-popup custom-status\">\r\n                <h2 className=\"h2-82\">Set a custom status</h2>\r\n                <form className=\"set-custom-status\" onSubmit={submit}>\r\n                    <label htmlFor=\"9288\" className=\"generic-label\">WHAT'S COOKIN', {user.username.toUpperCase()}</label>\r\n                    <input ref={inputRef} style={{ marginBottom: 15 }} type=\"text\" id=\"9288\" className=\"generic-input\" placeholder=\"Support has arrived!\" />\r\n                    <label htmlFor=\"8292\" className=\"generic-label\">CLEAR AFTER</label>\r\n                    <select className=\"generic-input\" id=\"8292\">\r\n                        <option>Don't clear</option>\r\n                    </select>\r\n                </form>\r\n                <div className=\"lower-section\">\r\n                    <button onClick={() => setView()} type=\"button\" className=\"generic-button cancel\">Cancel</button>\r\n                    <button ref={buttonRef} onClick={save} type=\"submit\" className=\"generic-button primary\">Save</button>\r\n                </div>\r\n            </div>\r\n        </Animate>\r\n    )\r\n}\r\n\r\nexport default CustomStatus","import { useContext } from \"react\"\r\nimport { ScreenContext } from \"..\"\r\nimport User from \"../../../classes/user\"\r\nimport Animate from \"../../animate\"\r\nimport \"./index.css\"\r\nimport CustomStatus from \"./setCustomStatus\"\r\n\r\nconst StatusManager = () => {\r\n    const { user, setView } = useContext(ScreenContext)\r\n    const me = new User(user)\r\n\r\n    const setCustomStatus = () => setView(<CustomStatus />)\r\n\r\n    return (\r\n        <Animate normal type={1}>\r\n            <div style={{ width: 220, left: 84, bottom: 62, transformOrigin: \"bottom center\" }} className=\"status-manager generic-menu animated-popup\">\r\n                <div onClick={setCustomStatus} className=\"current-status option\">{me.customStatus ? me.customStatus : \"Set a custom status\"}</div>\r\n            </div>\r\n        </Animate>\r\n    )\r\n}\r\n\r\nexport default StatusManager","const Status = ({ status, size }) => {\r\n    const x = size < 60 ? 22 : (size < 100 ? 60 : 88)\r\n    const w = size < 60 ? 10 : (size < 100 ? 16 : 24)\r\n    const s = size < 60 ? 2.5 : (size < 100 ? 4 : 6)\r\n    switch (status) {\r\n        case \"online\": return (\r\n            <rect\r\n                width={w}\r\n                height={w}\r\n                x={x}\r\n                y={x}\r\n                fill=\"var(--green)\"\r\n                rx=\"200\"\r\n            ></rect>\r\n        )\r\n        default: return (\r\n            <circle\r\n                r={w / 2 - s / 2}\r\n                cx={x + w / 2}\r\n                cy={x + w / 2}\r\n                strokeWidth={s}\r\n                stroke=\"var(--font-secondary)\"\r\n                fill=\"transparent\"\r\n            >\r\n            </circle>\r\n        )\r\n    }\r\n}\r\n\r\nconst Avatar = ({ src, status, className, size, ...props }) => {\r\n    const name = size < 60 ? 32 : (size < 100 ? 80 : 120)\r\n    return (\r\n        <svg {...props} height={size} width={size}>\r\n            <foreignObject className={`user-av ${className}`} height={size} width={size} y=\"0\" x=\"0\" mask={`url(#mask-round-${name})`}>\r\n                <img style={{ width: size, height: size }} className=\"avatar-icon\" alt=\"avatar\" src={src} />\r\n            </foreignObject>\r\n            <Status size={size} status={status} />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Avatar","import { useContext } from \"react\"\r\nimport User from \".\"\r\nimport { ScreenContext } from \"../../app/message\"\r\nimport Gear from \"../../icons/settings\"\r\nimport StatusManager from \"../../app/message/statusManager\"\r\nimport Avatar from \"../../global/avatar\"\r\n\r\nconst Footer = () => {\r\n    const { user, setView, setShowSettings } = useContext(ScreenContext)\r\n    const me = new User(user)\r\n\r\n    const showSettings = () => setShowSettings(true)\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"icon-div\">\r\n                <Avatar onClick={() => setView(<StatusManager />)} className=\"my-pfp\" status={\"online\"} src={me.displayAvatarURL(90)} size={32} />\r\n            </div>\r\n            <h5 className=\"my-username\">{me.username}<span>{me.tag}</span></h5>\r\n            <div title=\"User Settings\" onClick={showSettings} className=\"settings-button\"><Gear width={17} height={17} /></div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import Server from \"../server\"\r\nimport { useState } from \"react\"\r\nimport { link } from \"../../config.json\"\r\n\r\nconst Invite = ({ invite, code, onJoin, me }) => {\r\n    const server = new Server(invite)\r\n    const text = me.servers.find(s => s._id === server.id) ? \"Joined\" : \"Join\"\r\n    const [state, setState] = useState(text)\r\n\r\n    const join = () => {\r\n        if (text === \"Joined\" || state === \"...\") return\r\n        setState(\"...\")\r\n        fetch(`${link}servers/${code}`, { method: \"POST\", headers: { Authorization: me.token } })\r\n            .then((res) => res.json())\r\n            .then((server) => {\r\n                setState(\"Joined\")\r\n                onJoin(server)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"message-invite\">\r\n            <img width=\"40\" height=\"40\" className=\"server-invite-icon\" src={server.displayIcon(57)} alt=\"icon\" />\r\n            <div className=\"name-and-members\">\r\n                <h4 className=\"server-invite-name\">{server.name}</h4>\r\n                <div className=\"member-count\">{invite.members.length} member{invite.members.length !== 1 && \"s\"}</div>\r\n            </div>\r\n            <button onClick={join} className=\"server-invite-join\">{state}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Invite","function Dots({ size }) {\r\n    return (\r\n        <svg width={size} height={size} viewBox=\"0 0 24 24\">\r\n            <rect id=\"view-box\" width=\"24\" height=\"24\" fill=\"currentColor\" opacity=\"0\" />\r\n            <path id=\"Shape\" d=\"M12,1.5A1.5,1.5,0,1,1,13.5,3,1.5,1.5,0,0,1,12,1.5Zm-6,0A1.5,1.5,0,1,1,7.5,3,1.5,1.5,0,0,1,6,1.5Zm-6,0A1.5,1.5,0,1,1,1.5,3,1.5,1.5,0,0,1,0,1.5Z\" transform=\"translate(4.5 11)\" fill=\"currentColor\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Dots","import Animate from \"../../app/animate\"\r\nimport MessageJSX from \"./message\"\r\n\r\nconst MessageDelete = ({ message, onCancel }) => {\r\n    const del = () => {\r\n        message.delete()\r\n        onCancel()\r\n    }\r\n    return (\r\n        <Animate>\r\n            <div className={`dlt animated-popup`}>\r\n                <h2 className=\"some-text\">Delete message</h2>\r\n                <h4 className=\"dumb-question\">Are you sure you want to delete this message?</h4>\r\n                <div className=\"preview-message\"><MessageJSX full={true} message={message} /></div>\r\n                <div className=\"lower-section\">\r\n                    <button onClick={onCancel} className=\"generic-button cancel\">Cancel</button>\r\n                    <button className=\"generic-button error\" onClick={del}>Delete</button>\r\n                </div>\r\n            </div>\r\n        </Animate>\r\n    )\r\n}\r\n\r\nexport default MessageDelete","import { useRef, useContext, useState, useLayoutEffect } from \"react\"\r\nimport Utils from \"../../utils\"\r\nimport Delete from \"./delete-message\"\r\nimport { ScreenContext } from \"../../app/message\"\r\n\r\nconst Menu = ({ style, message, clickOut, edit }) => {\r\n    const { user: me, setView } = useContext(ScreenContext)\r\n    const [top, setTop] = useState(style.top)\r\n    const divRef = useRef()\r\n    useLayoutEffect(() => {\r\n        const viewportOffset = divRef.current.getBoundingClientRect();\r\n        if (style.top > window.innerHeight - viewportOffset.height - 10) setTop(window.innerHeight - viewportOffset.height - 10)\r\n        if (style.top < 10) setTop(10)\r\n    }, [style.top])\r\n    const deleteE = () => {\r\n        clickOut()\r\n        setView(<Delete onCancel={() => setView()} message={message} />)\r\n    }\r\n    const copyID = () => {\r\n        navigator.clipboard.writeText(message.id)\r\n        clickOut()\r\n    }\r\n    const editMessage = () => {\r\n        clickOut()\r\n        edit(deleteE)\r\n    }\r\n    const readMessage = () => {\r\n        if ('speechSynthesis' in window) {\r\n            const audio = new SpeechSynthesisUtterance()\r\n            audio.text = `${message.author.username} said ${message.content}`\r\n            speechSynthesis.speak(audio)\r\n        }\r\n        clickOut()\r\n    }\r\n    return (\r\n        <Utils.Out click={clickOut}>\r\n            <div ref={divRef} style={{ ...style, top }} className=\"message-menu\">\r\n                {me._id === message.author.id && <div onClick={editMessage} className=\"editor option\">Edit</div>}\r\n                <div onClick={deleteE} className=\"deletor option\">Delete</div>\r\n                <div className=\"option\" onClick={readMessage}>Speak Message</div>\r\n                <div className=\"option\" onClick={copyID}>Copy ID</div>\r\n            </div>\r\n        </Utils.Out>\r\n    )\r\n}\r\n\r\nexport default Menu","import { useContext, useState } from \"react\"\r\nimport { link } from \"../../config.json\"\r\nimport { ScreenContext } from \"../../app/message\"\r\nimport Animate from \"../../app/animate\"\r\n\r\nconst Attachment = ({ message }) => {\r\n    const { setView } = useContext(ScreenContext)\r\n    const click = () => setView(\r\n        <Animate>\r\n            <img className={`view-attachment animated-popup`} src={link + message.attachment.URL} alt=\"attachment\" />\r\n        </Animate>\r\n    )\r\n    const [bg, setBg] = useState(\r\n        <div className=\"rotating\">\r\n            <div className=\"rotating-div-1\" />\r\n            <div className=\"rotating-div-2\" />\r\n        </div>\r\n    )\r\n    if (!message.attachment?.URL) return null\r\n    return (\r\n        <div className=\"image-div\">\r\n            {bg}\r\n            <img onLoad={() => setBg()} loading=\"lazy\" width={message.calculateImage.width} height={message.calculateImage.height} src={message.displayAttachmentURL} className=\"message-attachment\" alt=\"attachment\" onClick={click} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Attachment","import Utils from \"../../utils\";\r\nimport Invite from \"./invite\";\r\nimport Dots from \"../../icons/3dots\";\r\nimport Menu from \"./menu\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport Attachment from \"./attachment\";\r\nimport Input from \"../../global/input\";\r\nimport \"./message.css\"\r\nimport UserJSX from \"../user/user\";\r\nimport { ScreenContext } from \"../../app/message\";\r\nimport PreviousQueries from \"../../cache\";\r\nimport User from \"../user\";\r\n\r\nconst Text = ({ message, isBeingEdited, edit, input, setIsBeingEdited, edited }) => {\r\n    if (isBeingEdited) return (\r\n        <div className=\"message-editor\">\r\n            <div style={{ overflowY: \"auto\", maxHeight: \"40vh\" }} className=\"text-content\">\r\n                <Input defaultValue={message.content} onKeyDown={(k) => k.code === \"Enter\" && edit(k)} innerRef={input} className=\"message-edit not-input\" />\r\n            </div>\r\n            <div className=\"editor-text\">escape to <span onClick={() => setIsBeingEdited(false)}>cancel</span> or enter to <span onClick={edit}>save</span> </div>\r\n        </div>\r\n    )\r\n    return <span className={`text ${(message.unsent ? \"unsent-message \" : \" \") + (message.failed ? \"failed-tosend\" : \"\")}`}>{message.content}{edited && <span title={new Date(message.updatedAt).toDateString()} className=\"edited\">(edited)</span>}</span>\r\n}\r\n\r\nconst MessageJSX = ({ message, full }) => {\r\n    const [clicked, setClicked] = useState(false)\r\n    const [isBeingEdited, setIsBeingEdited] = useState(null)\r\n    const { setView } = useContext(ScreenContext)\r\n    const author = PreviousQueries.userCache.has(message.author.id) ? new User(PreviousQueries.userCache.get(message.author.id)) : message.author\r\n    const input = useRef()\r\n    const clickOut = (...args) => {\r\n        setClicked(false)\r\n        setView(...args)\r\n    }\r\n    const click = async (e) => {\r\n        if (clicked) return clickOut()\r\n        setClicked(true)\r\n        const viewportOffset = e.target.getBoundingClientRect()\r\n        const style = {\r\n            left: viewportOffset.left + viewportOffset.width + 7 < window.innerWidth - 275 ? viewportOffset.left + viewportOffset.width + 7 : window.innerWidth - 275,\r\n            top: viewportOffset.top - 60\r\n        }\r\n        setView(\r\n            <Utils.Out getEvent={true} click={e => e.target.id !== `avatar-${message.id}` && clickOut()}>\r\n                <UserJSX setView={clickOut} user={message.author} server={message.server} style={style} />\r\n            </Utils.Out>\r\n        )\r\n    }\r\n    const join = (server) => message.onJoin(server)\r\n    const triggerEdit = (ifEmptyDelete) => {\r\n        document.dispatchEvent(new KeyboardEvent(\"keydown\", { code: \"Escape\" }))\r\n        setIsBeingEdited(() => ifEmptyDelete)\r\n    }\r\n    const menu = (e) => {\r\n        const viewportOffset = e.target.getBoundingClientRect();\r\n        const style = {\r\n            top: viewportOffset.top,\r\n            left: viewportOffset.left,\r\n            zIndex: 4\r\n        }\r\n        const out = () => {\r\n            setView()\r\n            setClicked(false)\r\n        }\r\n        setView(<Menu clickOut={out} edit={triggerEdit} style={style} message={message} />)\r\n        setClicked(true)\r\n    }\r\n    const edit = (e) => {\r\n        if (!input.current?.innerText.trim()) {\r\n            e.preventDefault()\r\n            return isBeingEdited()\r\n        }\r\n        if (input.current) message.edit(input.current.innerText)\r\n        setIsBeingEdited()\r\n    }\r\n\r\n    const edited = new Date(message.updatedAt).getTime() !== new Date(message.timestamp).getTime()\r\n\r\n    useEffect(() => {\r\n        const listener = (e) => {\r\n            if (e.code === \"Escape\") setIsBeingEdited(null)\r\n        }\r\n        document.addEventListener(\"keydown\", listener)\r\n        return () => document.removeEventListener(\"keydown\", listener)\r\n    }, [message.author])\r\n\r\n    return (\r\n        <div id={message.id} className={`message-div ${message.unsent ? \"unsent\" : \"\"} ${(clicked || !!isBeingEdited) && \"clicked\"}`} style={{ marginTop: full ? \"0.4em\" : 0 }}>\r\n            {full ? <img id={`avatar-${message.id}`} onClick={click} width=\"40\" height=\"40\" className=\"author-icon\" src={author.displayAvatarURL(90)} alt=\"avatar\" /> :\r\n                <span className=\"timestamp\">{`${message.timestamp.getHours()}`.padStart(2, '0')}:{`${message.timestamp.getMinutes()}`.padStart(2, '0')}</span>}\r\n            <div className=\"message-content\">\r\n                {full && <span className=\"author-name\"><span onClick={click} className=\"exact-author\">{author.username}</span><span className=\"exact-time\">{message.createdAt}</span></span>}\r\n                <Text input={input} isBeingEdited={isBeingEdited} setIsBeingEdited={setIsBeingEdited} edited={edited} edit={edit} message={message} />\r\n                <Attachment message={message} />\r\n                {message.invite?._id && <Invite me={message.me} onJoin={join} invite={message.invite} code={message.inviteCode} />}\r\n                <div onClick={menu} tabIndex=\"0\" className=\"message-params\"><Dots size={22} /></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageJSX","import React from \"react\"\r\nimport Message from \".\"\r\nimport MessageJSX from \"./message\"\r\n\r\nconst Messages = ({ messages, setMessages, me, onJoin, server }) => {\r\n    const jsx = messages.map((message, i) => {\r\n        const mapped = new Message(Object.assign(message, { setMessages }), me, onJoin, server)\r\n        const full = mapped.author.id === messages[i - 1]?.author._id\r\n        const $ = mapped.timestamp.toDateString() !== new Message(messages[i - 1] || mapped).timestamp.toDateString()\r\n        return (\r\n            <React.Fragment key={mapped.id}>\r\n                {$ && !!i && <div className=\"new-day\"><div /><span>{mapped.timestamp.toDateString()}</span><div /></div>}\r\n                <li>\r\n                    <MessageJSX full={!full || $} message={mapped} />\r\n                </li>\r\n            </React.Fragment>\r\n        )\r\n    })\r\n    return jsx\r\n}\r\n\r\nexport default Messages","const Hashtag = ({ size }) => {\r\n    return (\r\n        <svg height={size} viewBox=\"0 0 24 24\" width={size}>\r\n            <path d=\"M11.03 8h3.94l1.06-4.24a1 1 0 1 1 1.94.48L17.03 8H20a1 1 0 0 1 0 2h-3.47l-1 4H18a1 1 0 1 1 0 2h-2.97l-1.06 4.25a1 1 0 1 1-1.94-.49l.94-3.76H9.03l-1.06 4.25a1 1 0 1 1-1.94-.49L6.97 16H4a1 1 0 0 1 0-2h3.47l1-4H6a1 1 0 0 1 0-2h2.97l1.06-4.24a1 1 0 1 1 1.94.48L11.03 8zm-.5 2l-1 4h3.94l1-4h-3.94z\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Hashtag","import { Fragment, useContext, useState } from \"react\"\r\nimport { ScreenContext } from \"../\"\r\nimport Channel from \"../../../classes/channel\"\r\nimport Server from \"../../../classes/server\"\r\nimport User from \"../../../classes/user\"\r\nimport Hashtag from \"../../../icons/hashtag\"\r\nimport Animate from \"../../animate\"\r\nimport \"./index.css\"\r\n\r\nconst MapLogs = ({ logs, click }) => {\r\n    return logs.map(l => {\r\n        const log = new User(l)\r\n\r\n        return (\r\n            <li key={log.id} onClick={() => click(log)} className=\"search-result\">\r\n                <img alt={log.username} src={log.displayAvatarURL(90)} className=\"icon-avatar\" style={{ width: 20, height: 20, borderRadius: \"50%\" }} />\r\n                <span>{log.username}</span>\r\n            </li>\r\n        )\r\n    })\r\n}\r\n\r\nconst MapChannels = ({ server }) => {\r\n    return server.channels.map(c => {\r\n        const channel = new Channel(c)\r\n        return (\r\n            <li key={channel.id} className=\"search-result\">\r\n                <Hashtag size={20} />\r\n                <span>{channel.name}</span>\r\n            </li>\r\n        )\r\n    })\r\n}\r\n\r\nconst MapServers = ({ filter, click }) => {\r\n    const { user, setServer } = useContext(ScreenContext)\r\n    return user.servers.map(s => {\r\n        const server = new Server(s, user)\r\n        if (!server.name.includes(filter)) return null\r\n        const c = () => {\r\n            click()\r\n            setServer(server)\r\n        }\r\n        return (\r\n            <Fragment key={server.id} >\r\n                <MapChannels server={server} />\r\n                <li onClick={c} className=\"search-result\">\r\n                    <img alt={server.name} src={server.displayIcon(100)} className=\"icon-avatar\" style={{ width: 20, height: 20, borderRadius: 5 }} />\r\n                    <span>{server.name}</span>\r\n                </li>\r\n            </Fragment>\r\n        )\r\n    })\r\n}\r\n\r\nconst FindConversation = ({ logs, clickUser }) => {\r\n    const [filter, setFilter] = useState(\"\")\r\n    const { setView } = useContext(ScreenContext)\r\n\r\n    const clickEv = (user) => {\r\n        setView()\r\n        clickUser(user)\r\n    }\r\n\r\n    return (\r\n        <Animate>\r\n            <div className={`generic-popup find-conversation animated-popup`}>\r\n                <input placeholder=\"Where would you like to go?\" onChange={e => setFilter(e.target.value)} className=\"big-input\" />\r\n                <div className=\"list\">\r\n                    <ul>\r\n                        <MapLogs click={clickEv} logs={logs.filter(log => log.username.includes(filter))} />\r\n                        <MapServers click={() => setView()} filter={filter} />\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Animate>\r\n    )\r\n}\r\n\r\nexport default FindConversation","const createMessage = async (k, user, channel, setMessages, attachments, setAttachments, done) => {\r\n    if (k.code !== \"Enter\") return\r\n    k.preventDefault?.();\r\n    if (!k.target.textContent.trim() && !attachments.length) return\r\n    const message = { author: user, content: k.target.innerText.trim(), _id: `m${Date.now()}`, createdAt: Date.now(), unsent: true, channel: channel.id, updatedAt: Date.now(), attachment: attachments?.[0]?.data }\r\n    setMessages(prev => [...prev, message])\r\n    if (attachments?.length) setAttachments([])\r\n    channel.send(message)\r\n        .then(msg => {\r\n            const update = Object.assign(message, { _id: msg.id, unsent: false, invite: msg.invite, content: msg.content })\r\n            if (msg.attachment?.URL) update.attachment = msg.attachment\r\n            setMessages(prev => {\r\n                const allMessages = [...prev]\r\n                const find = allMessages.find(ms => ms._id === message._id)\r\n                allMessages[allMessages.indexOf(find)] = update\r\n                return allMessages\r\n            })\r\n            update.author.online = msg.author.online\r\n        })\r\n        .catch((err) => {\r\n            console.error(err)\r\n            setMessages(prev => {\r\n                const list = [...prev]\r\n                const find = list.find(ms => ms._id === message._id)\r\n                if (find) find.failed = true\r\n                return list\r\n            })\r\n        })\r\n    done?.()\r\n    k.target.textContent = \"\"\r\n}\r\n\r\nexport default createMessage\r\n\r\n","const createBlob = (base64str, contentType) => {\r\n    const byteCharacters = window.atob(base64str)\r\n    const byteNumbers = new Array(byteCharacters.length)\r\n    for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i)\r\n    }\r\n    const byteArray = new Uint8Array(byteNumbers)\r\n    const blob = new Blob([byteArray], { type: contentType })\r\n    return blob\r\n}\r\n\r\nexport default createBlob","import createBlob from \"../../../global/createBlob\"\r\nimport Plus from \"../../../icons/plus\"\r\nimport \"./index.css\"\r\n\r\nconst Attachments = ({ attachments, setAttachments }) => {\r\n    const deleteAttachment = index => setAttachments(prev => [...prev].filter((_, i) => i !== index))\r\n    return attachments.map(({ data, fileName }, i) => {\r\n        const blob = createBlob(data.split(\",\")[1], \"image/\" + fileName.split(\".\").pop())\r\n        const url = URL.createObjectURL(blob)\r\n        return (\r\n            <li className=\"attachment-item\" key={i} style={{ position: \"relative\" }}>\r\n                <button onClick={() => deleteAttachment(i)} className=\"attachment-delete\"><Plus size={15} /></button>\r\n                <img src={url} className=\"attachment-2\" alt=\"attachment\" />\r\n                <span className=\"attachment-name\">{fileName}</span>\r\n            </li>\r\n        )\r\n    })\r\n}\r\n\r\nexport default Attachments","const toBase64 = file => new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n        const img = new Image()\r\n        img.onload = () => resolve(reader.result);\r\n        img.src = reader.result\r\n    }\r\n    reader.onerror = error => reject(error);\r\n});\r\n\r\nexport default toBase64","import { useEffect, useLayoutEffect, useState, useCallback, useContext } from \"react\"\r\nimport User from \"../../classes/user\"\r\nimport Plus from \"../../icons/plus\"\r\nimport \"./home.css\"\r\nimport { link } from \"../../config.json\"\r\nimport { ScreenContext, socket } from \".\"\r\nimport SkeletonLoadingMessage from \"../../icons/bones\"\r\nimport Input from \"../../global/input\"\r\nimport Footer from \"../../classes/user/footer\"\r\nimport Messages from \"../../classes/message/messagesMapper\"\r\nimport SearchUsers from \"./findConversation/index\"\r\nimport createMessage from \"./sendMessage\"\r\nimport handleSocketEvents from \"./handleSocketEvents\"\r\nimport PreviousQueries from \"../../cache\"\r\nimport Avatar from \"../../global/avatar\"\r\nimport Attachments from \"./attachmentManager\"\r\nimport toBase64 from \"../../global/toBase64\"\r\n\r\nconst Map = ({ users, onClick, type }) => {\r\n    return users.map(u => {\r\n        if (!u) return null\r\n        const user = new User(u)\r\n        return (\r\n            <div key={user.id} className=\"friend\">\r\n                <img width=\"35\" height=\"35\" alt=\"uwu\" src={user.displayAvatarURL(45)} className=\"friend-pfp\" />\r\n                <div>\r\n                    <h5 className=\"friend-name\">{user.username}<span>{user.tag}</span></h5>\r\n                    <p className=\"state\">{type === \"requests\" && u.received && \"Incoming friend request\"}</p>\r\n                    <p className=\"state\">{type === \"requests\" && !u.received && \"Ongoing friend request\"}</p>\r\n                    <p className=\"state\">{type === \"friends\" && (!u.online ? \"Offline\" : \"Online\")}</p>\r\n                </div>\r\n                {type === \"requests\" && u.received && <div onClick={() => onClick?.(user)} className=\"accept\"><Plus size={15} /></div>}\r\n                {type === \"friends\" && <div onClick={() => onClick?.(user)} className=\"accept\">DM</div>}\r\n            </div>\r\n        )\r\n    })\r\n}\r\n\r\nconst Friends = ({ online, user, click }) => {\r\n    const [friends, setFriends] = useState([])\r\n\r\n    useEffect(() => {\r\n        let isMounted = true\r\n        fetch(`${link}friends`, {\r\n            headers: {\r\n                Authorization: user.token\r\n            }\r\n        }).then(res => res.json())\r\n            .then(friends => {\r\n                if (isMounted) setFriends(online ? friends.filter(f => f.online) : friends)\r\n            })\r\n        return () => {\r\n            isMounted = false\r\n            setFriends([])\r\n        }\r\n    }, [user, online])\r\n\r\n    return (\r\n        <>\r\n            <h5 className=\"home-title\">{online ? \"ONLINE\" : \"ALL\"}—{friends.length}</h5>\r\n            <div className=\"list\">\r\n                <Map onClick={click} type=\"friends\" users={friends} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Add = ({ user }) => {\r\n    const [value, setValue] = useState(\"\")\r\n    const [text, setText] = useState(<p className=\"dumb-text-3\">You can add a friend by their tag. It's CaSe SeNsiTive!</p>)\r\n\r\n    const handleInputChange = (e) => setValue(e.target.value)\r\n\r\n    const sendRequest = async () => {\r\n        const [username, tag] = value.split(\"#\")\r\n        if (!username || !tag) return\r\n        const res = await fetch(`${link}users/${username}&${tag}/request`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Authorization: user.token,\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n\r\n        if (res.ok) {\r\n            return setText(<p style={{ color: \"var(--green)\" }} className=\"dumb-text-3\">You send a friend request to {username + \"#\" + tag}</p>)\r\n        }\r\n\r\n        setText(<p style={{ color: \"var(--red)\" }} className=\"dumb-text-3\">Failed to send a friend request to {username + \"#\" + tag}</p>)\r\n    }\r\n\r\n    return (\r\n        <div className=\"invite\">\r\n            <h3 className=\"h3-add\">ADD FRIEND</h3>\r\n            {text}\r\n            <div className=\"add-friend-input\">\r\n                <input autoComplete=\"off\" maxLength=\"35\" onChange={handleInputChange} placeholder=\"Enter a username#0000\" />\r\n                <div className=\"fake-after\">{!value.includes(\"#\") && value}</div>\r\n                <button onClick={sendRequest} className={`send-friend-request ${value && \"valid\"}`}>Send friend request</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Pending = ({ user }) => {\r\n    const [requests, setRequests] = useState([])\r\n\r\n    useEffect(() => {\r\n        let isMounted = true\r\n        fetch(`${link}friends/pending`, {\r\n            headers: {\r\n                Authorization: user.token\r\n            }\r\n        }).then(res => res.json())\r\n            .then(requests => {\r\n                if (isMounted) setRequests(requests)\r\n            })\r\n        return () => { isMounted = false }\r\n    }, [user])\r\n\r\n    const click = (invite) => {\r\n        setRequests(prev => [...prev].filter(u => u._id !== invite.id))\r\n        fetch(`${link}accept/${invite.id}`, {\r\n            method: \"POST\",\r\n            headers: { Authorization: user.token }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h5 className=\"home-title\">PENDING—{requests.length}</h5>\r\n            <div className=\"list\">\r\n                <Map type=\"requests\" onClick={click} users={requests} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst DM = ({ dm, me, onJoin, setLogs }) => {\r\n    const [messages, setMessages] = useState()\r\n    const [attachments, setAttachments] = useState([])\r\n    const [isLoading, setIsLoading] = useState()\r\n\r\n    const sendMessage = useCallback((k) => {\r\n        const awaitForMessage = () => {\r\n            const logs = prev => {\r\n                const newOrder = [...prev]\r\n                newOrder.splice(0, 0, newOrder.splice(newOrder.findIndex(u => u._id === dm.user._id), 1)[0]);\r\n                return newOrder\r\n            }\r\n            setLogs(logs);\r\n            PreviousQueries.setLogs(logs)\r\n        }\r\n        createMessage(k, me, new User(dm.user), setMessages, attachments, setAttachments, awaitForMessage)\r\n    }, [dm.user, me, attachments, setLogs])\r\n\r\n    useLayoutEffect(() => {\r\n        let isMounted = true\r\n        if (PreviousQueries.channels[dm.user.id]) {\r\n            setMessages(PreviousQueries.channels[dm.user.id])\r\n        } else {\r\n            setMessages()\r\n            fetch(`${link}dm/${dm.user.id}`, {\r\n                headers: { Authorization: me.token }\r\n            }).then(res => res.json())\r\n                .then(messages => {\r\n                    if (!isMounted) return\r\n                    setMessages(messages)\r\n                    PreviousQueries.at(\"channels\", dm.user.id)(messages)\r\n                    setIsLoading()\r\n                })\r\n        }\r\n        const dmEvent = message => {\r\n            if (!isMounted) return\r\n            if (message.channel !== dm.user.id) return\r\n            handleSocketEvents.message(setMessages, message)\r\n        }\r\n        const messageDelete = message => {\r\n            if (!isMounted) return\r\n            if (message.user !== dm.user.id && message.user !== me._id) return\r\n            handleSocketEvents.messageDelete(setMessages, message)\r\n        }\r\n        const messageEdit = message => handleSocketEvents.messageEdit(setMessages, message)\r\n        socket.on(\"dm\", dmEvent)\r\n        socket.on(\"messageDelete\", messageDelete)\r\n        socket.on(\"messageEdit\", messageEdit)\r\n        return () => {\r\n            isMounted = false\r\n            socket.off(\"dm\", dmEvent).off(\"messageDelete\", messageDelete).off(\"messageEdit\", messageEdit)\r\n        }\r\n    }, [me.token, me._id, dm])\r\n\r\n    useLayoutEffect(() => {\r\n        if (!messages && !PreviousQueries.channels[dm.user.id]) setIsLoading(<SkeletonLoadingMessage />)\r\n        else setIsLoading(false)\r\n    }, [messages, dm.user.id])\r\n\r\n    useEffect(() => {\r\n        if (messages && dm.message?.target.textContent) sendMessage(dm.message)\r\n    }, [messages, dm.message, sendMessage])\r\n\r\n    const sendImage = (file) => {\r\n        if (!file.data) return\r\n        setAttachments([file])\r\n    }\r\n\r\n    const getImageFromInput = async (e) => {\r\n        const base64str = await toBase64(e.target.files[0]).catch(() => 0)\r\n        sendImage({ data: base64str, fileName: e.target.files[0]?.name })\r\n        e.target.value = \"\"\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"chat\">\r\n                {isLoading}\r\n                <ul className=\"fetched-messages\">\r\n                    <div className=\"dm-start\">\r\n                        <img height=\"85\" width=\"85\" className=\"dm-avatar\" alt=\"icon\" src={dm.user.displayAvatarURL(90)} />\r\n                        <h3 className=\"dm-username\">{dm.user.username}</h3>\r\n                        <p className=\"dumb-text-2\">This is the beginning of your direct message history with <span>{dm.user.username}</span></p>\r\n                    </div>\r\n                    {messages && <Messages onJoin={onJoin} setMessages={setMessages} messages={messages} me={me} />}\r\n                </ul>\r\n            </div>\r\n            <form className=\"send-message\">\r\n                <div className=\"controll\">\r\n                    <div className=\"message-manager\">\r\n                        <ul className={`attachment-list ${attachments.length && \"has-children\"}`}>\r\n                            <Attachments setAttachments={setAttachments} attachments={attachments} />\r\n                        </ul>\r\n                        <div className=\"text-content\">\r\n                            <div className=\"file\">\r\n                                <button className=\"attach-file\">\r\n                                    <input type=\"file\" onChange={getImageFromInput} />\r\n                                    <Plus size={10} />\r\n                                </button>\r\n                            </div>\r\n                            <Input placeholder={`Send a message to ${dm.user.username}`} onKeyDown={sendMessage} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Home = ({ user, dm, onJoin }) => {\r\n    const { setView } = useContext(ScreenContext)\r\n    const [button, setButton] = useState(\"online\")\r\n    const [Dm, setDm] = useState(dm)\r\n    const [logs, setLogs] = useState(PreviousQueries.logs)\r\n    const clickEvent = (u) => setDm({ user: u })\r\n    const [screen, setScreen] = useState(<Friends click={clickEvent} online={true} user={user} />)\r\n\r\n    useEffect(() => {\r\n        if (dm) setDm(dm)\r\n    }, [dm])\r\n\r\n    const { not: [notifications, setNotifications] } = useContext(ScreenContext)\r\n\r\n    useLayoutEffect(() => {\r\n        if (!Dm?.user.id) return\r\n        if (notifications.find(n => n.user._id === Dm.user.id)) setNotifications(prev => [...prev].filter(n => n.user._id !== Dm.user.id))\r\n        fetch(`${link}notifications?id=${Dm.user.id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                Authorization: user.token\r\n            }\r\n        })\r\n            .catch(console.log)\r\n    }, [notifications, setNotifications, Dm?.user.id, user.token])\r\n\r\n    useEffect(() => {\r\n        let isMounted = true\r\n        if (PreviousQueries.logs.length) setLogs(PreviousQueries.logs)\r\n        else fetch(`${link}dms/logs`, {\r\n            headers: {\r\n                Authorization: user.token\r\n            }\r\n        }).then(res => res.json())\r\n            .then(logs => {\r\n                if (!isMounted) return\r\n                setLogs(logs)\r\n                PreviousQueries.setLogs(logs)\r\n            })\r\n        const onlineEvent = user => handleSocketEvents.memberOnline(setLogs, user)\r\n        socket.on(\"online\", onlineEvent)\r\n        return () => {\r\n            socket.off(\"online\", onlineEvent)\r\n            isMounted = false\r\n        }\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        if (Dm) {\r\n            setScreen(<DM setLogs={setLogs} onJoin={onJoin} dm={Dm} me={user} />)\r\n            setButton(Dm.user.id)\r\n            if (!logs.some(u => u._id === Dm.user.id) && !PreviousQueries.logs.some(u => u._id === Dm.user.id)) {\r\n                setLogs(prev => [Dm.user, ...prev])\r\n                PreviousQueries.setLogs(prev => [Dm.user, ...prev])\r\n            }\r\n        }\r\n    }, [Dm, user, onJoin, logs])\r\n\r\n    const click = (button) => () => {\r\n        setButton(button)\r\n        if (button === \"online\") setScreen(<Friends click={clickEvent} online={true} user={user} />)\r\n        if (button === \"add\") setScreen(<Add user={user} />)\r\n        if (button === \"pending\") setScreen(<Pending user={user} />)\r\n        if (button === \"all\") setScreen(<Friends click={clickEvent} user={user} />)\r\n    }\r\n\r\n    const getFriends = () => {\r\n        setButton(\"online\")\r\n        setDm()\r\n        setScreen(<Friends click={clickEvent} online={true} user={user} />)\r\n    }\r\n\r\n    const makeConversation = () => setView(<SearchUsers clickUser={(user) => setDm({ user })} logs={logs} />)\r\n\r\n    return (\r\n        <main className=\"flexible-container\">\r\n            <section className=\"left-part\">\r\n                <header className=\"server-name home-search\">\r\n                    <input onClick={makeConversation} value=\"Find or start conversation\" className=\"home-search-input generic-input-type-button\" type=\"button\" />\r\n                </header>\r\n                <div className=\"channels\">\r\n                    <div onClick={getFriends} className={`friends-click ${!Dm && \"friends-clicked\"}`}>Friends</div>\r\n                    <h4 className=\"direct-messages\">DIRECT MESSAGES</h4>\r\n                    {logs.map(u => {\r\n                        const user = PreviousQueries.userCache.has(u._id) ? new User(PreviousQueries.userCache.get(u._id)) : new User(u)\r\n                        const click = () => setDm({ user })\r\n                        return (\r\n                            <div onClick={click} key={user.id} style={{ opacity: 1 }} className={`member ${Dm?.user.id === user.id && \"member-clicked\"} ${!user.online && \"member-offline\"}`}>\r\n                                <div className=\"member-avatar\">\r\n                                    <Avatar size={32} status={user.online ? \"online\" : false} src={user.displayAvatarURL(90)} />\r\n                                </div>\r\n                                <div className=\"nice-div\">\r\n                                    <h4 className={`member-name`}>{user.username}</h4>\r\n                                    <p className=\"is-online\">{user.online && user.customStatus}</p>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <Footer setView={setView} />\r\n            </section>\r\n            <section className=\"messages messages-home\">\r\n                <div className={`name name-${button}`}>\r\n                    {!Dm ? <>\r\n                        <h3 className=\"h3-title\">Friends <span>|</span></h3>\r\n                        <div className=\"home-buttons\">\r\n                            <button onClick={click(\"online\")} className=\"online\">Online</button>\r\n                            <button onClick={click(\"all\")} className=\"all\">All</button>\r\n                            <button onClick={click(\"pending\")} className=\"pending\">Pending</button>\r\n                            <button onClick={click(\"add\")} className=\"add-friend\">Add friend</button>\r\n                        </div>\r\n                    </> :\r\n                        <div className=\"dm-title\">\r\n                            <img className=\"who-am-i-talking-to\" height=\"20\" width=\"20\" alt=\"pfp\" src={Dm.user.displayAvatarURL(80)} />\r\n                            <div className=\"channel-title\"><span>{Dm.user.username}</span></div>\r\n                        </div>\r\n                    }</div>\r\n                <div className=\"messages-main\">{screen}</div>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Home","import { useContext, useState } from \"react\"\r\nimport Animate from \"../../app/animate\"\r\nimport { ScreenContext } from \"../../app/message\"\r\nimport Avatar from \"../../global/avatar\"\r\nimport Server from \"../server\"\r\nimport \"./profile.css\"\r\n\r\nconst MapServers = ({ servers }) => {\r\n    return (\r\n        <div className=\"list\" style={{ marginTop: 10, height: \"100%\" }}>\r\n            {servers.map(server => {\r\n                const s = new Server(server)\r\n                return (\r\n                    <div key={s.id} className=\"mutual-server friend\">\r\n                        {server.icon ? <img width=\"40\" height=\"40\" alt=\"uwu\" src={s.displayIcon(100)} className=\"friend-pfp server-ico\" /> :\r\n                            <div style={{ width: 40, height: 40, background: \"var(--blue)\" }} className=\"default-no-img-div server-ico friend-pfp\">{server.name[0]}</div>}\r\n                        <h5 className=\"friend-name\">{s.name}</h5>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst UserInfo = ({ user }) => {\r\n    const saveNote = (e) => localStorage.setItem(user.id, e.target.value)\r\n\r\n    return (\r\n        <div style={{ padding: \"0 15px\", boxSizing: \"border-box\" }} className=\"note\">\r\n            <h5>NOTE</h5>\r\n            <textarea defaultValue={localStorage.getItem(user.id)} onChange={saveNote} placeholder=\"Click to add note\"></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst All = ({ button, servers, user }) => {\r\n    switch (button) {\r\n        case 1: return <UserInfo user={user} />\r\n        case 2: return <MapServers servers={servers} />\r\n        case 3: return <div style={{ marginTop: 10 }} className=\"list\"></div>\r\n        default: return null\r\n    }\r\n}\r\n\r\nconst Profile = ({ user, dm, online }) => {\r\n    const [button, setButton] = useState(1)\r\n    const { user: me } = useContext(ScreenContext)\r\n    const mutualServers = me.servers.filter(s => s.members.includes(user.id))\r\n\r\n    const update = (button) => () => setButton(button)\r\n\r\n    const backgroundImage = !user.profileColor && `url(${user.displayAvatarURL(90)})`\r\n    return (\r\n        <Animate>\r\n            <div className={`view-profile animated-popup ${!online && \"not-online\"}`}>\r\n                <div style={{ backgroundColor: user.profileColor || \"#000000\", backgroundImage }} className=\"user-bg\"></div>\r\n                <div className=\"pfp-wrapper\">\r\n                    <Avatar src={user.displayAvatarURL(120)} status={user.online ? \"online\" : \"offline\"} size={120} className=\"bruhbruh\"/>\r\n                </div>\r\n                {me._id !== user.id && <button onClick={() => dm({ code: \"Enter\" })} className=\"send-req\">Send Message</button>}\r\n                {/*i ran out of classnames*/}\r\n                <h3 className=\"uwu-20\">{user.username}<span>{user.tag}</span></h3>\r\n                <div className=\"more-with-border\">\r\n                    <div className=\"more\">\r\n                        <div onClick={update(1)} className={`more-div user-info-2 ${button === 1 && \"clicked\"}`}>User Info</div>\r\n                        <div onClick={update(2)} className={`more-div mutual-servers ${button === 2 && \"clicked\"}`}>Mutual Servers</div>\r\n                        <div onClick={update(3)} className={`more-div mutual-friends ${button === 3 && \"clicked\"}`}>Mutual Friends</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"even-more\">\r\n                    <All button={button} servers={mutualServers} user={user} />\r\n                </div>\r\n            </div>\r\n        </Animate>\r\n    )\r\n}\r\n\r\nexport default Profile","import { useContext, useRef, useLayoutEffect, useState, useEffect } from \"react\"\r\nimport User from \".\"\r\nimport { Update } from \"../../app\"\r\nimport { ScreenContext, socket } from \"../../app/message\"\r\nimport Home from \"../../app/message/home\"\r\nimport PreviousQueries from \"../../cache\"\r\nimport Avatar from \"../../global/avatar\"\r\nimport Gear from \"../../icons/settings\"\r\nimport Profile from \"./profile\"\r\n\r\nconst UserJSX = ({ user, server, style, setView, editable, onClick }) => {\r\n    const cachedUser = PreviousQueries.userCache.has(user.id) ? new User(PreviousQueries.userCache.get(user.id)) : user\r\n    const { setScreen, setServer, user: me } = useContext(ScreenContext)\r\n    const update = useContext(Update)\r\n    const [top, setTop] = useState(style.top)\r\n    const [seconds, setSeconds] = useState(0)\r\n    const [online, setOnline] = useState(user.online)\r\n    const divRef = useRef()\r\n    useLayoutEffect(() => {\r\n        const viewportOffset = divRef.current.getBoundingClientRect();\r\n        if (style.top > window.innerHeight - viewportOffset.height - 20) setTop(window.innerHeight - viewportOffset.height - 20)\r\n        if (style.top < 10) setTop(10)\r\n        const handleOnlineEvent = (user) => setOnline(user.online)\r\n        socket.on(\"online\", handleOnlineEvent)\r\n        return () => socket.off(\"online\", handleOnlineEvent)\r\n    }, [style.top])\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => setSeconds(prev => ++prev), 1000)\r\n        return () => clearInterval(timer)\r\n    }, [])\r\n\r\n    const dm = (e) => {\r\n        if (e.code !== \"Enter\") return\r\n        setServer()\r\n        const fakeEvent = { code: \"Enter\", target: { textContent: e.target?.value, innerText: e.target?.value } }\r\n        setScreen(<Home update={update} dm={{ user, message: fakeEvent }} user={me} />)\r\n        setView()\r\n    }\r\n    const saveNote = (e) => localStorage.setItem(user.id, e.target.value)\r\n\r\n    const viewProfile = () => {\r\n        if (onClick) return onClick()\r\n        setView(<Profile dm={dm} user={user} online={online} />)\r\n    }\r\n\r\n    return (\r\n        <div ref={divRef} style={{ ...style, top }} className={`user-div ${!online && \"not-online\"}`}>\r\n            <div style={{ backgroundColor: cachedUser.profileColor || \"#000\" }} className=\"user-bg-1\" />\r\n            <div onClick={viewProfile} className=\"avatar-wrapper\">\r\n                <Avatar status={cachedUser.online ? \"online\" : \"offline\"} className=\"bruhbruh\" src={cachedUser.displayAvatarURL(90)} size={80} />\r\n                <svg viewBox=\"0 0 80 80\" className=\"hidden-text\" height=\"80\" width=\"80\">\r\n                    <foreignObject overflow=\"visible\" height=\"80\" width=\"80\" y=\"0\" x=\"0\" mask=\"url(#mask-round-80)\">\r\n                        <div className=\"change-929\">{editable ? \"CHANGE AVATAR\" : \"VIEW PROFILE\"}</div>\r\n                    </foreignObject>\r\n                </svg>\r\n            </div>\r\n            <h5 className=\"user-username\">{cachedUser.username}<span>{cachedUser.tag}</span></h5>\r\n            <span className=\"user-custom-status\">{cachedUser.online && cachedUser.customStatus}</span>\r\n            <div className=\"line first\" />\r\n            {server &&\r\n                <div className=\"roles\">\r\n                    <h5>ROLES</h5>\r\n                    <div className=\"role\">Member</div>\r\n                    {server.owner === cachedUser.id && <div className=\"role\">Owner</div>}\r\n                    <div className=\"line last\"></div>\r\n                </div>\r\n            }\r\n            {!editable ? <div className=\"note\">\r\n                <h5>NOTE</h5>\r\n                <textarea onChange={saveNote} defaultValue={localStorage.getItem(user.id)} placeholder=\"Click to add a note\"></textarea>\r\n            </div> :\r\n                <div className=\"customizing-my-profile\">\r\n                    <h5>CUSTOMIZING MY PROFILE</h5>\r\n                    <div style={{ height: 70 }} className=\"flex-line\">\r\n                        <div className=\"activity-icon\">\r\n                            <Gear height={50} width={50} />\r\n                        </div>\r\n                        <div className=\"activity-name\">\r\n                            <h5>User Profile</h5>\r\n                            <span>{(~~(seconds / 60)).toFixed().padStart(2, \"0\")}:{(seconds - (~~(seconds / 60) * 60)).toFixed().padStart(2, \"0\")} elapsed</span>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            {me._id !== user.id && <input onKeyDown={dm} placeholder={`Message ${cachedUser.username}${cachedUser.tag}`} className=\"dm-user\" />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserJSX","const Crown = ({ size }) => {\r\n    return (\r\n        <svg height={size} width={size} version=\"1.1\" id=\"crown\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" style={{enableBackground: 'new 0 0 512 512'}} xmlSpace=\"preserve\">\r\n        <circle style={{fill: '#F95FF2'}} cx=\"50.637\" cy=\"264.44\" r=\"50.637\" />\r\n        <circle style={{fill: '#AB15A4'}} cx=\"461.363\" cy=\"264.44\" r=\"50.637\" />\r\n        <polygon style={{fill: '#E7C05C'}} points=\"405.099,416.352 461.363,393.846 495.121,50.637 458.844,76.244 \" />\r\n        <polygon style={{fill: '#FFD875'}} points=\"375.557,135.033 255.993,50.637 136.434,135.033 16.879,50.637 50.637,416.352 \r\n\t425.391,416.352 458.844,76.244 \" />\r\n        <circle style={{fill: '#D0A842'}} cx={256} cy=\"264.44\" r=\"84.396\" />\r\n        <path style={{fill: '#FEDFFD'}} d=\"M461.363,393.846h-33.758v67.517h33.758c18.645,0,33.758-15.114,33.758-33.758\r\n\tC495.121,408.96,480.007,393.846,461.363,393.846z\" />\r\n        <path style={{fill: '#FFF3EE'}} d=\"M461.363,427.604c0-18.645-15.114-33.758-33.758-33.758H50.637\r\n\tc-18.645,0-33.758,15.114-33.758,33.758c0,18.645,15.114,33.758,33.758,33.758h376.967\r\n\tC446.249,461.363,461.363,446.249,461.363,427.604z\" />\r\n        <path style={{fill: '#AB15A4'}} d=\"M256,213.802v101.275c27.966,0,50.637-22.671,50.637-50.637S283.966,213.802,256,213.802z\" />\r\n        <path style={{fill: '#D23ACB'}} d=\"M272.879,264.44c0-27.966-7.557-50.637-16.879-50.637c-27.966,0-50.637,22.671-50.637,50.637\r\n\ts22.671,50.637,50.637,50.637C265.322,315.077,272.879,292.406,272.879,264.44z\" />\r\n        <g>\r\n          <circle style={{fill: '#E7C05C'}} cx=\"89.673\" cy=\"317.89\" r=\"8.44\" />\r\n          <circle style={{fill: '#E7C05C'}} cx=\"123.431\" cy=\"351.648\" r=\"8.44\" />\r\n        </g>\r\n      </svg>\r\n    )\r\n}\r\n\r\nexport default Crown","import { useContext, useState } from \"react\"\r\nimport User from \".\"\r\nimport { ScreenContext } from \"../../app/message\"\r\nimport PreviousQueries from \"../../cache\"\r\nimport Avatar from \"../../global/avatar\"\r\nimport Crown from \"../../icons/crown\"\r\nimport Utils from \"../../utils\"\r\nimport UserJSX from \"./user\"\r\n\r\nconst MemberJSX = ({ server, member }) => {\r\n    const user = PreviousQueries.userCache.has(member.id) ? new User(PreviousQueries.userCache.get(member.id)) : member\r\n    const [isClicked, setIsClicked] = useState(false)\r\n    const { setView } = useContext(ScreenContext)\r\n    const showUser = (e) => {\r\n        setIsClicked(true)\r\n        const cancel = () => {\r\n            setIsClicked(false)\r\n            setView()\r\n        }\r\n        const top = e.target.getBoundingClientRect().top - 40\r\n        const clickOut = (...args) => {\r\n            setIsClicked(false)\r\n            setView(...args)\r\n        }\r\n        setView(\r\n            <Utils.Out click={cancel}>\r\n                <UserJSX user={member} setView={clickOut} style={{ right: 245, top, animationName: \"reverseShift\" }} server={server}/>\r\n            </Utils.Out>\r\n        )\r\n    }\r\n    return (\r\n        <div onClick={showUser} key={member.id} className={`member ${isClicked && \"member-clicked\"} ${!user.online && \"member-offline\"}`}>\r\n            <div className=\"member-avatar\">\r\n                <Avatar className=\"bruhbruh\" status={user.online ? \"online\" : \"offline\"} size={32} src={user.displayAvatarURL(90)}/>\r\n            </div>\r\n            <div className=\"nice-div\">\r\n                <span className={`member-name ${server?.owner === member.id && \"owner\"}`}>{user.username} {server?.owner === member.id && <Crown size={16} />}</span>\r\n                <span className=\"is-online\">{user.online ? user.customStatus : null}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemberJSX","import \"./index.css\"\r\nimport { link } from \"../../config.json\"\r\nimport UserJSX from \"./user\"\r\nimport MemberJSX from \"./member\"\r\nimport Message from \"../message\"\r\n\r\nclass User {\r\n    constructor(user) {\r\n        for (const key in user) {\r\n            this[key] = user[key]\r\n        }\r\n        this.id = user._id\r\n    }\r\n    static MapMembers({ members, server, setView, me }) {\r\n        const onlineLength = members.filter(m => m?.online).length, offlineLength = members.length - onlineLength\r\n        const online = [<h5 className=\"members-title\" key=\"online\">ONLINE — {onlineLength}</h5>],\r\n            offline = [<h5 className=\"members-title\" key=\"offline\">OFFLINE — {offlineLength}</h5>]\r\n        const sortedMembers = members.sort((a, b) => a.username.localeCompare(b.username))\r\n        for (const member of sortedMembers) {\r\n            const Member = new User(Object.assign(member, { view: setView }))\r\n            const jsx = <MemberJSX member={Member} key={Member.id} server={server} me={me} />\r\n            if (member.online) online.push(jsx)\r\n            else offline.push(jsx)\r\n        }\r\n        if (offline.length === 1) offline.length = 0\r\n        if (online.length === 1) online.length = 0\r\n        return online.concat(offline)\r\n    }\r\n    displayAvatarURL(size) {\r\n        return `${link + this.avatarURL}${size ? `?width=${size}&height=${size}` : \"\"}`\r\n    }\r\n    toJSX(style, server, setView) {\r\n        return <UserJSX user={this} setView={setView} style={style} server={server} />\r\n    }\r\n    async fetch() {\r\n        const response = await fetch(`${link}fetch/${this.id}`).then(res => res.json())\r\n        this.avatarURL = response.avatarURL\r\n        this.username = response.username\r\n        return new User(Object.assign({ _id: this.id }, response))\r\n    }\r\n    async edit(username, data, profileColor) {\r\n        const edit = await fetch(`${link}user/edit`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: this.token\r\n            },\r\n            body: JSON.stringify({ username, data, profileColor })\r\n        }).then(res => res.json())\r\n            .catch(console.log)\r\n\r\n        this.avatarURL = edit.avatarURL\r\n        this.username = edit.username\r\n        return edit\r\n    }\r\n    async send(message) {\r\n        const msg = await fetch(`${link}dm/${this.id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Authorization: message.author.token,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                content: message.content,\r\n                attachment: message.attachment\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n        return new Message(msg)\r\n    }\r\n}\r\n\r\nexport default User","import User from \"../user\"\r\nimport \"./index.css\"\r\nimport { link } from \"../../config.json\"\r\n\r\nconst formatDate = (date) => {\r\n    const minutes = `${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}`\r\n    const now = new Date()\r\n    const ms = now.getHours() * 3600000 + now.getMinutes() * 60000 + now.getSeconds() * 1000 + now.getMilliseconds()\r\n    const day = 8.64e+7\r\n    if (Date.now() - date.getTime() <= ms) return `Today at ${minutes}`\r\n    if (Date.now() - date.getTime() <= (ms + day)) return `Yesterday at ${minutes}`\r\n    return date.toLocaleDateString()\r\n}\r\n\r\nclass Message {\r\n    constructor(message, me, onJoin, server) {\r\n        this.author = new User(message.author)\r\n        this.content = message.content\r\n        this.attachment = message.attachment\r\n        this.timestamp = new Date(message.createdAt)\r\n        this.createdAt = formatDate(new Date(message.createdAt))\r\n        this.id = message._id\r\n        this.invite = message.invite\r\n        this.unsent = message.unsent\r\n        this.server = server\r\n        this.channel = message.channel\r\n        this.Authorization = me?.token\r\n        this.me = me\r\n        this.setMessages = message.setMessages\r\n        this.onJoin = onJoin\r\n        this.failed = message.failed\r\n        this.updatedAt = message.updatedAt\r\n    }\r\n    get calculateImage() {\r\n        if (this.attachment.height < 300 && this.attachment.width < 400) return {\r\n            height: this.attachment.height,\r\n            width: this.attachment.width\r\n        }\r\n        if (this.attachment.height >= this.attachment.width) {\r\n            return { height: 300, width: this.attachment.width / this.attachment.height * 300 }\r\n        }\r\n        if (this.attachment.height / this.attachment.width * 400 > 300) return { height: 300, width: this.attachment.width / this.attachment.height * 300 }\r\n        return { width: 400, height: this.attachment.height / this.attachment.width * 400 }\r\n    }\r\n    get displayAttachmentURL() {\r\n        const query = this.calculateImage.height !== this.attachment.height && this.calculateImage.width !== this.attachment.width ?\r\n            `?width=${Math.trunc(this.calculateImage.width)}&height=${Math.trunc(this.calculateImage.height)}` : \"\"\r\n        return link + this.attachment.URL + query\r\n    }\r\n    async delete() {\r\n        const message = await fetch(`${link}channels/${this.channel}/messages/${this.id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                Authorization: this.Authorization\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n        return message\r\n    }\r\n    async edit(content) {\r\n        const message = await fetch(`${link}channels/${this.channel}/messages/${this.id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: this.Authorization\r\n            },\r\n            body: JSON.stringify({ content })\r\n        })\r\n            .then(res => res.json())\r\n        return message\r\n    }\r\n    get inviteCode() {\r\n        const invite = this.content.match(/(^|\\s)server\\/.{8}(?=\\s|$)/g)?.[0]\r\n        if (!invite) return null\r\n        return invite.split(\"/\")[1]\r\n    }\r\n}\r\n\r\nexport default Message","import Hashtag from \"../../icons/hashtag\";\r\n\r\nconst ChannelJSX = ({ isClicked, onClick, channel }) => {\r\n    return (\r\n        <div onClick={onClick} className={`channel ${isClicked ? \"c-clicked\" : \"\"}`}>\r\n            <Hashtag size={25} />\r\n            <span>{channel.name}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelJSX","import { useEffect, useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { link } from \"../../config.json\"\r\nimport Message from \"../message\";\r\nimport Hashtag from \"../../icons/hashtag\";\r\nimport ChannelJSX from \"./channel\";\r\nimport PreviousQueries from \"../../cache\";\r\n\r\nconst components = {\r\n    LoadChannels: (channels, server, click) => {\r\n        const [state, setState] = useState(0)\r\n        useEffect(() => setState(0), [channels])\r\n        const jsx = channels.map((c, i) => {\r\n            const channel = new Channel(c, server)\r\n            return channel.toJSX(state === i, () => {\r\n                click(channel)\r\n                setState(i)\r\n            })\r\n        })\r\n        return jsx\r\n    }\r\n}\r\n\r\nclass Channel {\r\n    constructor(channel, server) {\r\n        this.name = channel.name\r\n        this.id = channel._id\r\n        this.server = server\r\n    }\r\n    static LoadChannels = components.LoadChannels\r\n    toJSX(isClicked, click) {\r\n        return <ChannelJSX key={this.id} isClicked={isClicked} onClick={click} channel={this} />\r\n    }\r\n    toTitle() {\r\n        return (\r\n            <div className=\"channel-title\">\r\n                <Hashtag size={28} />\r\n                <span>{this.name}</span>\r\n            </div>\r\n        )\r\n    }\r\n    join(socket, token) {\r\n        socket.emit(\"join\", { channel: this.id, Authorization: token })\r\n    }\r\n    async fetchMessages(token) {\r\n        if (PreviousQueries.channels[this.id]) return PreviousQueries.channels[this.id]\r\n        const messages = await fetch(`${link}channels/${this.id}/messages`, {\r\n            headers: { Authorization: token }\r\n        })\r\n            .then(res => res.json())\r\n            .catch(() => [])\r\n        const setMessages = PreviousQueries.at(\"channels\", this.id)\r\n        setMessages(messages.messages)\r\n        return messages.messages\r\n    }\r\n    async send(message) {\r\n        const msg = await fetch(`${link}channels/${this.id}/messages`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: message.author.token\r\n            },\r\n            body: JSON.stringify(message)\r\n        })\r\n            .then(res => res.json())\r\n        return new Message(msg)\r\n    }\r\n}\r\n\r\nexport default Channel","const Skeleton = () => (\r\n    <div className=\"member-skeleton\">\r\n        <div className=\"member-skeleton-pfp\"></div>\r\n        <div className=\"nice-div\">\r\n            <div className=\"member-skeleton-name\"></div>\r\n            {Math.random() > 0.5 && <div className=\"member-skeleton-status\"></div>}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default function MemberLoading({ times }) {\r\n    return [...Array(times)].map((_, i) => <Skeleton key={i} />)\r\n}","const Down = ({ size }) => {\r\n    return (\r\n        <svg width={size} height={size} viewBox=\"0 0 48 48\" fill=\"none\">\r\n            <path d=\"M37 18L25 30L13 18\" stroke=\"currentColor\" strokeWidth=\"4\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Down","import { useContext, useEffect, useState } from \"react\";\r\nimport { ScreenContext } from \"../../app/message\";\r\nimport Plus from \"../../icons/plus\";\r\nimport \"./options.css\"\r\nimport { link } from \"../../config.json\"\r\nimport User from \"../user\";\r\n\r\nconst InvitePeople = ({ server, quit, animation }) => {\r\n    const [friends, setFriends] = useState()\r\n    const [ids, setIds] = useState([])\r\n    const [filter, setFilter] = useState(\"\")\r\n    const [copied, setCopied] = useState(false)\r\n    const { user: me } = useContext(ScreenContext)\r\n\r\n    useEffect(() => {\r\n        let isMounted = true\r\n        fetch(`${link}friends`, {\r\n            headers: {\r\n                Authorization: me.token\r\n            }\r\n        }).then(res => res.json())\r\n            .then(friends => {\r\n                if (isMounted) setFriends(friends)\r\n            })\r\n        return () => { isMounted = false }\r\n    }, [me])\r\n\r\n    const copy = () => navigator.clipboard.writeText(\"server/\" + server.invites[0]).then(() => {\r\n        setCopied(true)\r\n        setTimeout(() => setCopied(false), 5000)\r\n    })\r\n\r\n    return (\r\n        <div className={`invite-people-div ${animation}`}>\r\n            <div className=\"part-1\">\r\n                <h3>INVITE PEOPLE TO {server.name.toUpperCase()}</h3>\r\n                <input onChange={(e) => setFilter(e.target.value)} placeholder=\"Search for friends\" />\r\n                <Plus onClick={quit} size={25} />\r\n            </div>\r\n            <div className=\"part-2\">\r\n                {!friends && <p className=\"searching\">SEARCHING FOR FRIENDS</p>}\r\n                {friends && !friends.some(u => u.username.toLowerCase().includes(filter.toLowerCase())) && <p className=\"searching\">NO RESULTS WERE FOUND</p>}\r\n                {friends && friends.map(f => {\r\n                    const user = new User(f)\r\n                    const click = () => {\r\n                        if (ids.includes(user.id)) return\r\n                        setIds(prev => [...prev, user.id])\r\n                        fetch(`${link}dm/${user.id}`, {\r\n                            method: \"POST\",\r\n                            headers: {\r\n                                Authorization: me.token,\r\n                                \"Content-Type\": \"application/json\"\r\n                            },\r\n                            body: JSON.stringify({\r\n                                content: \"server/\" + server.invites[0]\r\n                            })\r\n                        })\r\n                            .catch(console.error)\r\n                    }\r\n                    if (filter && !user.username.toLowerCase().includes(filter.toLowerCase())) return null\r\n                    return (\r\n                        <div key={user.id} className=\"invite-friend\">\r\n                            <img alt={user.id} width=\"34\" height=\"34\" src={user.displayAvatarURL(80)} />\r\n                            <h5>{user.username}</h5>\r\n                            <button className={`${ids.includes(user.id) && \"invited\"}`} onClick={click}>{ids.includes(user.id) ? \"Sent\" : \"Invite\"}</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className=\"part-3\">\r\n                <h4>OR, SEND A SERVER INVITE LINK TO A FRIEND</h4>\r\n                <div>\r\n                    <button className={`${copied ? \"copied\" : \"copy\"}`} onClick={copy}>{copied ? \"Copied\" : \"Copy\"}</button>\r\n                    <input readOnly={true} value={\"server/\" + server.invites[0]} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvitePeople","import { useContext, useState } from \"react\";\r\nimport { ScreenContext } from \"../../app/message\"\r\nimport Utils from \"../../utils\"\r\nimport { link } from \"../../config.json\"\r\n\r\nconst toBase64 = file => new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n        const img = new Image()\r\n        img.onload = () => resolve(reader.result);\r\n        img.src = reader.result\r\n    }\r\n    reader.onerror = error => reject(error);\r\n});\r\n\r\n// I HATE THIS COMPONENT SO MUCH\r\nconst EditServer = ({ server, animation, quit }) => {\r\n    const [src, setSrc] = useState(server.displayIcon(100, 100))\r\n    const [name, setName] = useState(\"\")\r\n    const { user } = useContext(ScreenContext)\r\n    const handleNameChange = e => setName(e.target.value)\r\n    const handleFileChange = async e => {\r\n        const file = e.target.files[0]\r\n        const data = await toBase64(file).catch(() => 0)\r\n        if (data) setSrc(data)\r\n    }\r\n    const save = () => {\r\n        fetch(`${link}server/${server.id}`, {\r\n            method: \"PATCH\",\r\n            body: JSON.stringify({ icon: src, name }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: user.token\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={`dark-div ${animation}`}>\r\n            <Utils.Out click={quit}>\r\n                <div className={`edit-server ${animation}`}>\r\n                    <div className=\"server-edit-icon\">\r\n                        <img height=\"100\" width=\"100\" src={src} alt=\"icon\" />\r\n                        <label className=\"upload-button\" htmlFor=\"xx3\">Upload Image</label>\r\n                        <input id=\"xx3\" name=\"upload\" className=\"upload-file\" onChange={handleFileChange} type=\"file\"/>\r\n                    </div>\r\n                    <div className=\"server-info\">\r\n                        <h3>Edit Server</h3>\r\n                        <label htmlFor=\"bruh\">SERVER NAME</label>\r\n                        <input className=\"change-server-name\" onChange={handleNameChange} name=\"bruh\" defaultValue={server.name} />\r\n                        <button onClick={save}>Save</button>\r\n                    </div>\r\n                </div>\r\n            </Utils.Out>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditServer","import { useContext, useState } from \"react\";\r\nimport { ScreenContext } from \"../../app/message\";\r\nimport Plus from \"../../icons/plus\";\r\nimport { link } from \"../../config.json\"\r\nimport Hashtag from \"../../icons/hashtag\";\r\nimport Animate from \"../../app/animate\";\r\n\r\nconst CreateChannel = ({ server, quit }) => {\r\n    const { user } = useContext(ScreenContext)\r\n    const [settings, setSettings] = useState({ name: \"\", type: \"text\" })\r\n    const [waiting, setWaiting] = useState(\"\")\r\n\r\n    const handleInputChange = (e) => setSettings(prev => ({ name: e.target.value, type: prev.type }))\r\n    const selfAnimate = () => {\r\n        setWaiting(\"self-smaller\")\r\n        setTimeout(() => quit(), 100)\r\n    }\r\n\r\n    const create = async () => {\r\n        if (!settings.name) return\r\n        setWaiting(\"waiting\")\r\n        await fetch(`${link}servers/${server.id}/channels`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: user.token\r\n            },\r\n            body: JSON.stringify(settings)\r\n        })\r\n        selfAnimate()\r\n    }\r\n\r\n    return (\r\n        <Animate>\r\n            <div className={`invite-people-div animated-popup ${waiting}`}>\r\n                <div style={{ textAlign: 'center' }} className=\"part-1\">\r\n                    <h3 style={{ fontSize: '20px', marginTop: 30 }}>Create Text Channel</h3>\r\n                    <Plus onClick={selfAnimate} size={25} />\r\n                </div>\r\n                <div className=\"check-boxes\">\r\n                    <h5>CHANNEL TYPE</h5>\r\n                    <div className=\"check\">\r\n                        <div className=\"checker\" />\r\n                        <Hashtag size={28} />\r\n                        <div className=\"channel-type\">\r\n                            <h4>Text Channel</h4>\r\n                            <p>Post images, GIFs, opinions and puns</p>\r\n                        </div>\r\n                    </div>\r\n                    <h5>CHANNEL NAME</h5>\r\n                    <input onChange={handleInputChange} style={{ marginTop: 0, height: 35 }} className=\"change-server-name\" />\r\n                </div>\r\n                <div className=\"lower-section\">\r\n                    <button onClick={selfAnimate} className=\"generic-button cancel\">Cancel</button>\r\n                    <button onClick={create} className={`generic-button success ${!settings.name && \"cant-click\"}`}>Create Channel</button>\r\n                </div>\r\n            </div>\r\n        </Animate>\r\n    )\r\n}\r\n\r\nexport default CreateChannel\r\n","import { useState, useLayoutEffect, useContext } from \"react\"\r\nimport Channel from \"../../classes/channel\"\r\nimport User from \"../../classes/user\"\r\nimport Plus from \"../../icons/plus\"\r\nimport { ScreenContext, socket } from \".\"\r\nimport { link } from \"../../config.json\"\r\nimport SkeletonLoadingMessage from \"../../icons/bones\"\r\nimport MemberLoading from \"../../icons/members\"\r\nimport Down from \"../../icons/down\"\r\nimport Utils from \"../../utils\"\r\nimport InvitePeople from \"../../classes/server/invite-people\"\r\nimport EditServer from \"../../classes/server/server-editor\"\r\nimport CreateChannel from \"../../classes/channel/create-channel\"\r\nimport Input from \"../../global/input\"\r\nimport Footer from \"../../classes/user/footer\"\r\nimport Messages from \"../../classes/message/messagesMapper\"\r\nimport Hashtag from \"../../icons/hashtag\"\r\nimport Animate from \"../animate\"\r\nimport Attachments from \"./attachmentManager/\"\r\nimport createMessage from \"./sendMessage\"\r\nimport handleSocketEvents from \"./handleSocketEvents\"\r\nimport PreviousQueries from \"../../cache\"\r\nimport toBase64 from \"../../global/toBase64\"\r\n\r\nconst Main = ({ user, server, onJoin }) => {\r\n    const { setView } = useContext(ScreenContext)\r\n    const me = new User(user)\r\n    const [channel, setChannel] = useState()\r\n    const [messages, setMessages] = useState()\r\n    const [members, setMembers] = useState([])\r\n    const [attachments, setAttachments] = useState([])\r\n    const click = (ch) => {\r\n        if (channel.id !== ch.id) setChannel(ch)\r\n    }\r\n    useLayoutEffect(() => {\r\n        let isMounted = true\r\n        setMessages()\r\n        try {\r\n            const ch = new Channel(server.channels[0], server)\r\n            if (ch) setChannel(ch)\r\n        } catch {\r\n            const ch = new Channel({ name: \"unknown\" })\r\n            setMessages([])\r\n            setChannel(ch)\r\n        }\r\n        setMembers([])\r\n        const onlineEvent = user => handleSocketEvents.memberOnline(setMembers, user)\r\n        server.fetchMembers(\"no-cache\").then(members => {\r\n            if (!isMounted) return\r\n            setMembers(members)\r\n            socket.on(\"online\", onlineEvent)\r\n        })\r\n        return () => {\r\n            socket.off(\"online\", onlineEvent)\r\n            isMounted = false\r\n        }\r\n    }, [server, me.token])\r\n\r\n    useLayoutEffect(() => {\r\n        if (!channel || !channel?.id) return\r\n        let isMounted = true\r\n        if (!PreviousQueries.channels[channel.id]) setMessages()\r\n        channel.join(socket, me.token)\r\n        channel.fetchMessages(me.token)\r\n            .then((messages) => {\r\n                if (isMounted) setMessages(messages)\r\n            })\r\n        const messageListener = msg => {\r\n            if (!isMounted || msg.author._id === me.id) return\r\n            if (channel.id !== msg.channel) return\r\n            handleSocketEvents.message(setMessages, msg)\r\n        }\r\n        const messageDeleteListener = msg => {\r\n            if (!isMounted) return\r\n            if (msg.channel === channel.id) handleSocketEvents.messageDelete(setMessages, msg)\r\n        }\r\n        const editListener = msg => (msg.channel === channel.id) && handleSocketEvents.messageEdit(setMessages, msg)\r\n        const memberUpdateListener = user => handleSocketEvents.memberUpdate(setMembers, setMessages, user)\r\n        socket.on(\"message\", messageListener)\r\n        socket.on(\"messageDelete\", messageDeleteListener)\r\n        socket.on(\"messageEdit\", editListener)\r\n        socket.on(\"memberUpdate\", memberUpdateListener)\r\n        return () => {\r\n            isMounted = false\r\n            socket.off(\"message\", messageListener)\r\n                .off(\"messageDelete\", messageDeleteListener)\r\n                .off(\"memberUpdate\", memberUpdateListener)\r\n                .off(\"messageEdit\", editListener)\r\n        }\r\n    }, [channel, me.id, me.token])\r\n\r\n\r\n    const sendMessage = (k) => createMessage(k, user, channel, setMessages, attachments, setAttachments)\r\n    const sendImage = (file) => {\r\n        if (!file.data) return\r\n        setAttachments([file])\r\n    }\r\n    const getImageFromInput = async (e) => {\r\n        const base64str = await toBase64(e.target.files[0]).catch(() => 0)\r\n        sendImage({ data: base64str, fileName: e.target.files[0]?.name })\r\n        e.target.value = \"\"\r\n    }\r\n    const getImageFromPaste = async (e) => {\r\n        const items = e.clipboardData.items\r\n        const file = items[1]?.getAsFile();\r\n        const base64str = await toBase64(file).catch(() => 0)\r\n        sendImage({ data: base64str, fileName: file?.name })\r\n    }\r\n    const dropFile = async (e) => {\r\n        e.stopPropagation()\r\n        e.preventDefault()\r\n        const items = e.dataTransfer.items\r\n        const file = items[0]?.getAsFile();\r\n        const base64str = await toBase64(file).catch(() => 0)\r\n        sendImage({ data: base64str, fileName: file?.name })\r\n    }\r\n\r\n    const [skeleton, setSkeleton] = useState()\r\n    useLayoutEffect(() => {\r\n        if (!messages && !PreviousQueries.channels[channel?.id]) {\r\n            setSkeleton(<SkeletonLoadingMessage />)\r\n        }\r\n        else setSkeleton()\r\n    }, [messages, channel])\r\n\r\n    const [menu, setMenu] = useState()\r\n\r\n    const invite = () => {\r\n        setMenu(false)\r\n        const quit = () => {\r\n            setView(<IP animation=\"smaller\" />)\r\n            setTimeout(() => setView(), 100)\r\n        }\r\n        const IP = ({ animation }) => {\r\n            return (\r\n                <div className={`dark-div ${animation}`}>\r\n                    <Utils.Out click={quit}>\r\n                        <InvitePeople animation={animation} quit={quit} server={server} />\r\n                    </Utils.Out>\r\n                </div>\r\n            )\r\n        }\r\n        setView(<IP animation=\"bigger\" />)\r\n    }\r\n    const leave = () => {\r\n        fetch(`${link}leave/${server.id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                Authorization: me.token\r\n            }\r\n        })\r\n    }\r\n    const createNewChannel = () => {\r\n        setMenu(false)\r\n        setView(<CreateChannel server={server} quit={() => setView()} animation=\"bigger\" />)\r\n    }\r\n\r\n    const serverSettings = () => {\r\n        setMenu(false)\r\n        const quit = () => {\r\n            setView(<EditServer server={server} quit={quit} animation=\"smaller\" />)\r\n            setTimeout(() => setView(), 100)\r\n        }\r\n        setView(<EditServer server={server} quit={quit} animation=\"bigger\" />)\r\n    }\r\n\r\n    const clickMenu = () => {\r\n        setMenu(true)\r\n        setView(\r\n            <Animate quit={() => setMenu(false)} normal type={1}>\r\n                <div className={`server-menu animated-popup`}>\r\n                    {server.owner === user._id && <>\r\n                        <p onClick={serverSettings}>Server Settings</p>\r\n                        <p onClick={createNewChannel}>Create Channel</p></>}\r\n                    <p onClick={invite} className=\"invite-people\">Invite People</p>\r\n                    {server.owner !== user._id && <><div className=\"separator\"></div>\r\n                        <p onClick={leave} className=\"leave-server\">Leave Server</p></>}\r\n                </div>\r\n            </Animate>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <main onDragOver={e => e.preventDefault()} onDrop={dropFile} className=\"flexible-container\">\r\n            <section className=\"left-part\">\r\n                <header onClick={clickMenu} className={`server-name ${menu && \"server-name-2\"}`}>\r\n                    <span>{server.name}</span>\r\n                    <Down size=\"23\" />\r\n                </header>\r\n                {menu}\r\n                <div className=\"channels\">\r\n                    <div style={{ marginBottom: 10 }} />\r\n                    <h4 className=\"direct-messages\">TEXT CHANNELS</h4>\r\n                    {Channel.LoadChannels(server?.channels || [], server, click)}\r\n                </div>\r\n                <Footer setView={setView} />\r\n            </section>\r\n            <section className=\"messages\">\r\n                <div className=\"name\">{channel?.toTitle()}</div>\r\n                <div className=\"messages-main\">\r\n                    <div className=\"chat\">\r\n                        {skeleton}\r\n                        <ul className=\"fetched-messages\">\r\n                            <div className=\"dm-start\">\r\n                                <div className=\"dm-avatar channel-icon\"><Hashtag size=\"50\" /></div>\r\n                                <h3 className=\"dm-username\">{channel?.name}</h3>\r\n                                <p className=\"dumb-text-2\">This is the start of <span>#{channel?.name}</span> message history.</p>\r\n                            </div>\r\n                            {messages && <Messages server={server} onJoin={onJoin} me={user} messages={messages} setView={setView} setMessages={setMessages} />}\r\n                        </ul>\r\n                    </div>\r\n                    <form onSubmit={e => e.preventDefault()} className=\"send-message\">\r\n                        <div className=\"controll\">\r\n                            <div className=\"message-manager\">\r\n                                <ul className={`attachment-list ${attachments.length && \"has-children\"}`}>\r\n                                    <Attachments setAttachments={setAttachments} attachments={attachments} />\r\n                                </ul>\r\n                                <div className=\"text-content\">\r\n                                    <div className=\"file\">\r\n                                        <button className=\"attach-file\">\r\n                                            <input type=\"file\" onChange={getImageFromInput} />\r\n                                            <Plus size={10} />\r\n                                        </button>\r\n                                    </div>\r\n                                    <Input renderId={channel?.id} placeholder={`Send a message to ${channel?.name}`} onPaste={getImageFromPaste} onKeyDown={sendMessage} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"users\">\r\n                    {members.length === 0 &&\r\n                        <div style={{ marginTop: 20 }}>\r\n                            <MemberLoading times={server?.members?.length || 10} />\r\n                        </div>\r\n                    }\r\n                    <User.MapMembers me={user} setView={setView} members={members} server={server} />\r\n                </div>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\n\r\nexport default Main","function EmbedHomeButton() {\r\n    return (\r\n        <svg width=\"36\" height=\"36\" version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\"\r\n            viewBox=\"0 0 24 24\">\r\n            <linearGradient id=\"svg-gradient\" gradientUnits=\"userSpaceOnUse\" x1=\"2.8461\" y1=\"11.7055\" x2=\"22.1588\" y2=\"11.7055\">\r\n                <stop offset=\"0\" style={{ stopColor: \"var(--purple-no-gradient)\" }} />\r\n                <stop offset=\"1\" style={{ stopColor: \"var(--blue)\" }} />\r\n            </linearGradient>\r\n            <path className=\"st0\" d=\"M12.5,7.1l-6.9,5.7c0,0,0,0,0,0c0,0,0,0,0,0v5.7c0,0.2,0.1,0.4,0.2,0.5c0.2,0.2,0.3,0.2,0.5,0.2H11v-4.6H14v4.6\r\n\th4.6c0.2,0,0.4-0.1,0.5-0.2c0.2-0.2,0.2-0.3,0.2-0.5v-5.7c0,0,0-0.1,0-0.1L12.5,7.1z M22,11.5l-2.6-2.2V4.4c0-0.1,0-0.2-0.1-0.3\r\n\tc-0.1-0.1-0.2-0.1-0.3-0.1h-2.3c-0.1,0-0.2,0-0.3,0.1c-0.1,0.1-0.1,0.2-0.1,0.3v2.3l-2.9-2.4C13.2,4.1,12.9,4,12.5,4\r\n\tc-0.4,0-0.7,0.1-0.9,0.3L3,11.5c-0.1,0.1-0.1,0.1-0.1,0.3c0,0.1,0,0.2,0.1,0.3l0.7,0.9C3.7,13,3.8,13,3.9,13.1c0.1,0,0.2,0,0.3-0.1\r\n\tl8.3-6.9l8.3,6.9c0.1,0.1,0.1,0.1,0.3,0.1h0c0.1,0,0.2-0.1,0.3-0.1l0.7-0.9c0.1-0.1,0.1-0.2,0.1-0.3C22.1,11.7,22.1,11.6,22,11.5z\"\r\n            />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default EmbedHomeButton","import { useState } from \"react\";\r\nimport Plus from \"../../icons/plus\";\r\nimport Animate from \"../../app/animate\";\r\nimport { link } from \"../../config.json\"\r\n\r\nconst Add = ({ view, onCreate, user }) => {\r\n    const [clicked, setClicked] = useState(\"\")\r\n    const toBase64 = file => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n\r\n    const Creator = () => {\r\n        const defaultName = `${user.username}'s server`\r\n        const [value, setValue] = useState(defaultName)\r\n        const [image, setImage] = useState(``)\r\n        const [animation, setAnimation] = useState(\"bigger\")\r\n\r\n        const handleChange = async (e) => {\r\n            toBase64(e.target.files[0])\r\n                .then(data => setImage(data))\r\n                .catch(console.log)\r\n        }\r\n\r\n        const del = () => {\r\n            setClicked(\"\")\r\n            setAnimation(\"self-smaller\")\r\n            setTimeout(() => view(), 100)\r\n        }\r\n\r\n        const createServer = async () => {\r\n            const server = await fetch(`${link}servers`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: user.token,\r\n                },\r\n                body: JSON.stringify({\r\n                    icon: image,\r\n                    name: value\r\n                })\r\n            }).then(res => res.json())\r\n            del()\r\n            onCreate?.(server)\r\n        }\r\n\r\n        return (\r\n            <Animate quit={() => setClicked(\"\")}>\r\n                <div className={`creator animated-popup ${animation}`}>\r\n                    <div className=\"view-server\">\r\n                        <Plus onClick={del} size={25} />\r\n                        <h2>Create a new Server</h2>\r\n                        <p className=\"dummy-text\">Create a new Server, customize it! Invite your friends to it. And have a good time.</p>\r\n                        <div className=\"selector\">\r\n                            <img className=\"my-icon\" alt=\"\" src={image} />\r\n                            <input onChange={handleChange} className=\"select-icon\" type=\"file\" />\r\n                        </div>\r\n                    </div>\r\n                    <label htmlFor=\"server\">SERVER NAME</label>\r\n                    <input required name=\"server\" defaultValue={defaultName} onChange={(event) => setValue(event.target.value)} className=\"select-server-name\" />\r\n                    <div style={{ backgroundColor: \"rgb(231, 239, 247)\" }} className=\"lower-section\">\r\n                        <button style={{ color: \"black\", marginRight: \"auto\", marginLeft: 0 }} onClick={del} className=\"generic-button cancel\">Back</button>\r\n                        <button onClick={createServer} className=\"generic-button primary\">Create</button>\r\n                    </div>\r\n                </div>\r\n            </Animate>\r\n        )\r\n    }\r\n\r\n    const click = () => {\r\n        setClicked(\"clicked\")\r\n        view(<Creator />)\r\n    }\r\n\r\n    return (\r\n        <div className={`server-block ${clicked}`}>\r\n            <div onClick={click} className=\"server\">\r\n                <div title=\"Add a Server\" className=\"add-server\">\r\n                    <Plus size={23} />\r\n                </div>\r\n            </div>\r\n            <div className=\"server-marker\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Add","import { useEffect, useMemo, useRef, useState } from \"react\"\r\nimport \"./imageCropper.css\"\r\n\r\nconst ImageCropper = ({ src, onChange }) => {\r\n    const canvasRef = useRef()\r\n    const rangeRef = useRef()\r\n    const lastPoint = { x: 0, y: 0 }\r\n    const [size, setSize] = useState([0, 0, 1])\r\n    const speed = 0.7\r\n    const canvasSize = useMemo(() => ({ width: 568, height: 361 }), [])\r\n    let coordinates = useMemo(() => [0, 0], [])\r\n    let isDragging = false\r\n    const calculator = () => ((rangeRef.current.value / 100) + 10) * size[2] * speed\r\n    const hoverListener = (e) => {\r\n        if (!isDragging) return\r\n        if (e.clientX > lastPoint.x) coordinates[0] += calculator()\r\n        if (e.clientX < lastPoint.x) coordinates[0] -= calculator()\r\n        if (e.clientY > lastPoint.y) coordinates[1] += calculator()\r\n        if (e.clientY < lastPoint.y) coordinates[1] -= calculator()\r\n        lastPoint.y = e.clientY\r\n        lastPoint.x = e.clientX\r\n    }\r\n    useEffect(() => {\r\n        let isMounted = true\r\n        const img = new Image()\r\n        const canvas = canvasRef.current\r\n        img.onload = () => {\r\n            const maxSize = Math.min(img.width, img.height)\r\n            const imgToSize = maxSize / canvasSize.height\r\n            canvas.height = canvasSize.height * imgToSize\r\n            canvas.width = canvasSize.width * imgToSize\r\n            if (isMounted) setSize([img.width / imgToSize, img.height / imgToSize, imgToSize])\r\n            const ctx = canvas.getContext(\"2d\")\r\n            const draw = () => {\r\n                if (!canvas || !rangeRef.current) return\r\n                const factor = rangeRef.current.value / 100\r\n                const x = img.width - (img.width * factor)\r\n                const y = img.height - (img.height * factor)\r\n                const radius = maxSize / 2\r\n                const limitX = img.width / 2 - radius\r\n                const limitY = img.height / 2 - radius\r\n                const minX = Math.min(coordinates[0], limitX + (img.width * (factor - 1)))\r\n                const maxX = minX * -1 < limitX ? minX : limitX * -1\r\n                coordinates[0] = maxX\r\n                const minY = Math.min(coordinates[1], limitY + (img.height * (factor - 1)))\r\n                const maxY = minY * -1 < limitY ? minY : limitY * -1\r\n                coordinates[1] = maxY\r\n                const position = [x + maxX + (canvas.width - img.width) / 2, y + maxY + (canvas.height - img.height) / 2]\r\n                ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n                ctx.beginPath()\r\n                ctx.drawImage(img, position[0], position[1], img.width * factor + 1, img.height * factor + 1)\r\n                onChange(canvas)\r\n                requestAnimationFrame(draw)\r\n            }\r\n            draw()\r\n        }\r\n        img.src = src\r\n        return () => isMounted = false\r\n    }, [src, coordinates, onChange, canvasSize])\r\n\r\n    const handleMouseDown = () => isDragging = true\r\n    const handleMouseUp = () => isDragging = false\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cropper\">\r\n                <canvas style={{ background: \"black\", ...canvasSize }} onMouseOut={handleMouseUp} onMouseUp={handleMouseUp} onMouseDown={handleMouseDown} onMouseMove={hoverListener} ref={canvasRef}></canvas>\r\n                <div style={{ width: Math.min(size[0], size[1]), height: Math.min(size[0], size[1]) }} className=\"circle-border\"></div>\r\n            </div>\r\n            <input className=\"zoom-range\" defaultValue={100} ref={rangeRef} max={200} min={100} type=\"range\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageCropper","import { useState } from \"react\"\r\nimport ImageCropper from \"./imageCropper\"\r\nimport \"./editImage.css\"\r\nimport Animate from \"../app/animate\"\r\n\r\nconst SubComponent = ({ src, onComplete, cancel }) => {\r\n    const [data, setData] = useState()\r\n\r\n    const complete = () => {\r\n        onComplete(data.toDataURL(\"image/webp\"))\r\n    }\r\n    const skip = () => onComplete(src)\r\n\r\n    return (\r\n        <Animate>\r\n            <div className=\"edit-image animated-popup\">\r\n                <h2>Edit Image</h2>\r\n                <ImageCropper style={{ maxHeight: 400, maxWidth: 400 }} onChange={setData} src={src} />\r\n                <div className=\"lower-section\">\r\n                    <button style={{ marginLeft: 10 }} onClick={skip} className=\"skip generic-button cancel\">Skip</button>\r\n                    <button style={{ marginLeft: \"auto\" }} onClick={cancel} className=\"edit-image-cancel generic-button cancel\">Cancel</button>\r\n                    <button style={{ marginRight: 1 }} onClick={complete} className=\"edit-image-complete generic-button primary\">Apply</button>\r\n                </div>\r\n            </div>\r\n        </Animate>\r\n    )\r\n}\r\n\r\nexport default SubComponent","const isGif = (base64str) => {\r\n    const byteCharacters = window.atob(base64str.split(\",\")[1])\r\n    const byteNumbers = new Array(byteCharacters.length)\r\n    for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i)\r\n    }\r\n    const byteArray = new Uint8Array(byteNumbers)\r\n    if (byteArray[0] !== 0x47 || byteArray[1] !== 0x49 || byteArray[2] !== 0x46 || byteArray[3] !== 0x38) return false\r\n    return true\r\n}\r\n\r\nexport default isGif","import { useState, useContext, useMemo, useRef, useEffect } from \"react\"\r\nimport Login from \"../../app/login\"\r\nimport { ScreenContext } from \"../../app/message\"\r\nimport { Update } from \"../../app\"\r\nimport SubComponent from \"../../global/editImage\"\r\nimport isGif from \"../../global/isGif\"\r\nimport \"./userSettings.css\"\r\nimport User from \".\"\r\nimport Plus from \"../../icons/plus\"\r\nimport Animate from \"../../app/animate\"\r\nimport UserJSX from \"./user\"\r\nimport Avatar from \"../../global/avatar\"\r\n\r\nconst toBase64 = file => new Promise((resolve, reject) => {\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(file)\r\n    reader.onload = () => {\r\n        const img = new Image()\r\n        img.onload = () => resolve(reader.result)\r\n        img.src = reader.result\r\n    }\r\n    reader.onerror = error => reject(error)\r\n})\r\n\r\nconst EditUsername = ({ user, onChange }) => {\r\n    const { setView } = useContext(ScreenContext)\r\n    const [newName, setNewName] = useState(user.username)\r\n    const changeUsername = e => {\r\n        e.preventDefault()\r\n        onChange(prev => Object.assign({}, prev, { username: newName }))\r\n        setView()\r\n    }\r\n    const cancel = () => setView()\r\n\r\n    return (\r\n        <Animate>\r\n            <div style={{ width: 450, overflow: 'hidden', borderRadius: 5 }} className=\"edit-username generic-popup animated-popup\">\r\n                <h2 style={{ marginBottom: \"0.5em\" }}>Change your username</h2>\r\n                <span style={{ color: \"var(--font-secondary)\", marginBottom: \"0.6em\" }} className=\"dumb-text-2\">Enter a new username and your current password</span>\r\n                <form style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\r\n                    <div className=\"content-wrapper\">\r\n                        <label className=\"generic-label\" htmlFor=\"new-username\">USERNAME</label>\r\n                        <input onChange={e => setNewName(e.target.value)} autoComplete=\"off\" style={{ marginBottom: \"0.8em\" }} type=\"text\" defaultValue={user.username} id=\"new-username\" className=\"new-username generic-input\" />\r\n                        <label className=\"generic-label\" htmlFor=\"current-password\">PASSWORD</label>\r\n                        <input autoComplete=\"off\" type=\"password\" id=\"current-password\" className=\"generic-input current-password\" />\r\n                    </div>\r\n                    <div className=\"lower-section\">\r\n                        <button onClick={cancel} type=\"button\" className=\"generic-button cancel\">Cancel</button>\r\n                        <button onClick={changeUsername} type=\"submit\" className=\"generic-button primary\">Done</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Animate>\r\n    )\r\n}\r\n\r\nconst MyAccount = ({ user, setButton, onChange, changes }) => {\r\n    const { setView } = useContext(ScreenContext)\r\n    const click = () => setView(<EditUsername onChange={onChange} user={user} />)\r\n\r\n    return (\r\n        <div className=\"my-account\">\r\n            <h2 className=\"my-account-header\">My Account</h2>\r\n            <div className=\"my-settings\">\r\n                <div style={{ backgroundColor: user.profileColor }} className=\"profile-color\"></div>\r\n                <div className=\"section-17\">\r\n                    <div className=\"section-721\">\r\n                        <div className=\"my-avatar-wrapper\">\r\n                            <Avatar status={\"online\"} size={80} src={user.displayAvatarURL(90)}/>\r\n                        </div>\r\n                        <h5 className=\"username-382\">{changes.username || user.username}</h5>\r\n                        <button onClick={setButton(1)} style={{ marginLeft: \"auto\" }} className=\"generic-button primary button-121\">Edit User Profile</button>\r\n                    </div>\r\n                    <div className=\"section-832\">\r\n                        <div className=\"username-77 flex-line\">\r\n                            <div>\r\n                                <h5 className=\"field-title\">USERNAME</h5>\r\n                                <div className=\"div-410\"><span>{changes.username || user.username}</span><span className=\"text-info\">{user.tag}</span></div>\r\n                            </div>\r\n                            <button onClick={click} style={{ color: \"var(--font-primary)\", marginLeft: \"auto\" }} className=\"generic-button secondary\">Edit</button>\r\n                        </div>\r\n                        <div className=\"email-10 flex-line\">\r\n                            <div>\r\n                                <h5 className=\"field-title\">EMAIL</h5>\r\n                                <div className=\"div-410\">{user.email}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"phone-number-47 flex-line\">\r\n                            <div>\r\n                                <h5 className=\"field-title\">PHONE NUMBER</h5>\r\n                                <div className=\"text-info\">This app doesn't support phone numbers</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst UserProfile = ({ user, onChange, changes }) => {\r\n    const { setView, user: me } = useContext(ScreenContext)\r\n    const [src, setSrc] = useState(user.displayAvatarURL(90))\r\n    const [color, setColor] = useState(user.profileColor)\r\n    const fileInput = useRef()\r\n    const colorInput = useRef()\r\n    const handleInputChange = async (e) => {\r\n        const file = e.target.files[0]\r\n        const data = await toBase64(file).catch(() => 0)\r\n        e.target.value = \"\"\r\n        if (!data) return\r\n        if (isGif(data)) {\r\n            onChange(prev => Object.assign({}, prev, { src: data }))\r\n            return setSrc(data)\r\n        }\r\n        if (data) {\r\n            const complete = data => {\r\n                setView()\r\n                setSrc(data)\r\n                onChange(prev => Object.assign({}, prev, { src: data }))\r\n            }\r\n            const cancel = () => {\r\n                setView()\r\n                setSrc(user.displayAvatarURL(150))\r\n            }\r\n            setView(<SubComponent src={data} cancel={cancel} onComplete={complete} />)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const oldUser = new User(me)\r\n        if (!changes.src) setSrc(oldUser.displayAvatarURL(80))\r\n        if (!changes.profileColor) setColor(oldUser.profileColor)\r\n    }, [changes, me])\r\n\r\n    const handleColorChange = e => {\r\n        setColor(e.target.value)\r\n        onChange(prev => Object.assign({}, prev, { profileColor: e.target.value }))\r\n    }\r\n\r\n    const goToDefault = () => onChange(prev => Object.assign({}, prev, { profileColor: \"#000\" }))\r\n\r\n    const supportedImages = \"image/gif,image/png,image/jpeg,image/webp\"\r\n\r\n    return (\r\n        <div className=\"user-profile\">\r\n            <h2 className=\"my-account-header\">User Profile</h2>\r\n            <div className=\"section-559\">\r\n                <div className=\"section-560\">\r\n                    <div className=\"section-700\">\r\n                        <h5 className=\"preview-2\">AVATAR</h5>\r\n                        <button onClick={() => fileInput.current?.click()} style={{ marginLeft: 0 }} className=\"generic-button primary\">Change Avatar</button>\r\n                    </div>\r\n                    <div className=\"user-color\">\r\n                        <h5 className=\"preview-2\">PROFILE COLOR</h5>\r\n                        <div className=\"profile-color-selector\">\r\n                            <div className=\"profile-color-option\">\r\n                                <div onClick={goToDefault} className=\"default-profileColor\"></div>\r\n                                <span>Default</span>\r\n                            </div>\r\n                            <div className=\"profile-color-option\">\r\n                                <div onClick={() => colorInput.current?.click()} style={{ backgroundColor: color }} className=\"custom-profileColor\">\r\n                                    <input defaultValue={user.profileColor} onChange={handleColorChange} ref={colorInput} style={{ visibility: \"hidden\" }} type=\"color\" />\r\n                                </div>\r\n                                <span>Custom</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section-561\">\r\n                    <h5 className=\"preview-2\">PREVIEW</h5>\r\n                    <UserJSX onClick={() => fileInput.current?.click()} editable style={{ position: \"relative\", animation: \"none\" }} user={Object.assign({}, user, { displayAvatarURL() { return src }, profileColor: color })} />\r\n                </div>\r\n                <input accept={supportedImages} style={{ display: \"none\" }} ref={fileInput} onChange={handleInputChange} type=\"file\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Appearance = () => {\r\n    const { setTheme } = useContext(ScreenContext)\r\n    const [currentTheme, setCurrentTheme] = useState(localStorage.getItem(\"theme\") || \"light\")\r\n    const switchTo = (theme) => () => {\r\n        setTheme(theme)\r\n        localStorage.setItem(\"theme\", theme)\r\n        setCurrentTheme(theme)\r\n    }\r\n    return (\r\n        <div>\r\n            <h2 className=\"my-account-header\">Appearance</h2>\r\n            <h5 className=\"preview-2\">THEME</h5>\r\n            <div className=\"check-list\">\r\n                <div className=\"check\" onClick={switchTo(\"dark\")}>\r\n                    <div className={`checker ${currentTheme !== \"dark\" && \"unchecked\"}`}></div>\r\n                    <h5 className=\"generic-header-5\">Dark</h5>\r\n                </div>\r\n                <div className=\"check\" onClick={switchTo(\"light\")}>\r\n                    <div className={`checker ${currentTheme !== \"light\" && \"unchecked\"}`}></div>\r\n                    <h5 className=\"generic-header-5\">Light</h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Render = ({ componentId, user, setButton, onChange, changes }) => {\r\n    switch (componentId) {\r\n        case 0: return <MyAccount changes={changes} onChange={onChange} setButton={setButton} user={user} />\r\n        case 1: return <UserProfile changes={changes} onChange={onChange} user={user} />\r\n        case 2: return <Appearance />\r\n        default: return null\r\n    }\r\n}\r\n\r\n\r\nconst UserSettings = () => {\r\n    const { setShowSettings, setUser, user: me } = useContext(ScreenContext)\r\n    const user = useMemo(() => new User(me), [me])\r\n    const [changes, setChanges] = useState({})\r\n    const [button, setButton] = useState(0)\r\n    const [animation, setAnimation] = useState(\"\")\r\n    const update = useContext(Update)\r\n\r\n    const logout = () => update(<Login update={update} />)\r\n\r\n    const edit = () => {\r\n        if (!Object.keys(changes).length) return\r\n        user.edit(changes.username, changes.src, changes.profileColor).then(u => {\r\n            setUser(Object.assign({}, user, u))\r\n            setChanges({})\r\n        })\r\n    }\r\n\r\n    const reset = () => setChanges({})\r\n\r\n    const quit = () => {\r\n        setAnimation(\"is-being-removed\")\r\n        setShowSettings(\"\")\r\n        setTimeout(() => setShowSettings(false), 140)\r\n    }\r\n\r\n    const getButton = (button) => () => !Object.keys(changes).length && setButton(button)\r\n    const isClicked = (btn) => `generic-button ${btn === button && \"clicked\"}`\r\n\r\n    return (\r\n        <div className={`settings ${animation}`}>\r\n            <div className=\"settings-left\">\r\n                <div className=\"scrollable-content\">\r\n                    <nav className=\"navigate-settings\">\r\n                        <div>\r\n                            <h5 className=\"generic-label header-82\">USER SETTINGS</h5>\r\n                            <button onClick={getButton(0)} className={isClicked(0)}>My Account</button>\r\n                            <button onClick={getButton(1)} className={isClicked(1)}>User Profile</button>\r\n                            <div className=\"seperator\"></div>\r\n                            <h5 className=\"generic-label header-82\">APP SETTINGS</h5>\r\n                            <button onClick={getButton(2)} className={isClicked(2)}>Appearance</button>\r\n                            <button onClick={logout} className=\"generic-button error\">Logout</button>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n            <div className=\"main-content\">\r\n                <div className=\"parameters\">\r\n                    <Render changes={changes} onChange={setChanges} setButton={getButton} componentId={button} user={user} />\r\n                    <div className=\"edit-check\">\r\n                        <div style={{ overflow: \"hidden\" }}>\r\n                            <div className={`confirm-edit ${!!Object.keys(changes).length && \"is-edited\"}`}>\r\n                                <span className=\"dumb-text\">Careful - you have unsaved changes!</span>\r\n                                <button onClick={reset} className=\"reset generic-button cancel\">Reset</button>\r\n                                <button className=\"generic-button success\" onClick={edit}>Save Changes</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div onClick={quit} className=\"return\"><Plus size={17} /></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserSettings","const Masks = () => {\r\n    return (\r\n        <svg style={{ position: \"absolute\", zIndex: -1000 }}>\r\n            <mask viewBox=\"0 0 1 1\" maskContentUnits=\"objectBoundingBox\" id=\"mask-round-80\">\r\n                <circle fill=\"white\" cx=\"0.5\" cy=\"0.5\" r=\"0.5\"></circle><circle fill=\"black\" cx=\"0.85\" cy=\"0.85\" r=\"0.175\"></circle>\r\n            </mask>\r\n            <mask viewBox=\"0 0 1 1\" maskContentUnits=\"objectBoundingBox\" id=\"mask-round-32\">\r\n                <circle fill=\"white\" cx=\"0.5\" cy=\"0.5\" r=\"0.5\"></circle><circle fill=\"black\" cx=\"0.85\" cy=\"0.85\" r=\"0.250\"></circle>\r\n            </mask>\r\n            <mask viewBox=\"0 0 1 1\" maskContentUnits=\"objectBoundingBox\" id=\"mask-round-120\">\r\n                <circle fill=\"white\" cx=\"0.5\" cy=\"0.5\" r=\"0.5\"></circle><circle fill=\"black\" cx=\"0.8333\" cy=\"0.8333\" r=\"0.1666666666\"></circle>\r\n            </mask>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Masks","import { useEffect, useState, createContext } from \"react\"\r\nimport Server from \"../../classes/server\"\r\nimport \"./index.css\"\r\nimport Main from \"./message\"\r\nimport { link } from \"../../config.json\"\r\nimport { io } from \"socket.io-client\"\r\nimport Home from \"./home\"\r\nimport HomeIcon from \"../../icons/home\"\r\nimport Login from \"../login\"\r\nimport User from \"../../classes/user\"\r\nimport \"../genericstyles.css\"\r\nimport Add from \"../../classes/server/addServer\"\r\nimport UserSettings from \"../../classes/user/user-settings\"\r\nimport PreviousQueries from \"../../cache\"\r\nimport Masks from \"../masks\"\r\n\r\nexport const ScreenContext = createContext()\r\nexport const socket = io(link, { transports: ['websocket', 'polling', 'flashsocket'] })\r\n\r\nconst notificationSound = new Audio(\"./notification.mp3\")\r\n\r\nconst Message = ({ user: me, update, dm }) => {\r\n    const [showSettings, setShowSettings] = useState(false)\r\n    const [user, setUser] = useState(me)\r\n    const [server, setServer] = useState()\r\n    user.notifications?.forEach(n => n.saved = true)\r\n    const [notifications, setNotifications] = useState(user.notifications || [])\r\n    const [servers, setServers] = useState(user.servers)\r\n\r\n    useEffect(() => {\r\n        socket.connect()\r\n        socket.emit(\"online\", me.token)\r\n        socket.on(\"disconnect\", () => {\r\n            update(<Login update={update} />)\r\n        })\r\n        socket.on(\"notification\", (notification) => {\r\n            notificationSound.play()\r\n            if (notification.type === \"dm\") setNotifications(prev => [...prev, notification])\r\n        })\r\n        socket.on(\"leave\", (server) => {\r\n            setServer()\r\n            setUser(prev => Object.assign(prev, { servers: [...prev.servers].filter(s => s._id !== `${server._id}`) }))\r\n            setServers(prev => [...prev].filter(s => s._id !== `${server._id}`))\r\n        })\r\n        socket.on(\"channelCreate\", (channel) => {\r\n            setServers(prev => {\r\n                const servers = [...prev]\r\n                const server = servers.find(s => s._id === channel.server)\r\n                server.channels.push(channel)\r\n                return servers\r\n            })\r\n        })\r\n        const init = PreviousQueries.init()\r\n        return () => {\r\n            init()\r\n            socket.off(\"disconnect\").off(\"notification\").off(\"channelCreate\")\r\n            socket.disconnect()\r\n            PreviousQueries.clear()\r\n        }\r\n    }, [me, update])\r\n\r\n    const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"light\")\r\n    const [screen, setScreen] = useState(<Home user={user} update={update} />)\r\n    const click = (s) => {\r\n        if (server?.id === s.id) return\r\n        setServer(s)\r\n    }\r\n    const handlenewServer = (user, server) => {\r\n        user.servers.push(server)\r\n        setServers(user.servers)\r\n        const s = new Server(server, user)\r\n        setServer(s)\r\n    }\r\n    const create = (server) => handlenewServer(user, server)\r\n    const [view, setView] = useState()\r\n\r\n    useEffect(() => {\r\n        const join = (server) => handlenewServer(user, server)\r\n        if (server) setScreen(<Main socket={socket} onJoin={join} update={update} server={server} user={user} />)\r\n        else setScreen(<Home onJoin={join} dm={dm} user={user} update={update} />)\r\n        socket.on(\"serverUpdate\", server => {\r\n            setServers(prev => {\r\n                const servers = [...prev]\r\n                const sv = servers.find(s => s._id === server._id.toString())\r\n                sv.icon = server.icon\r\n                sv.name = server.name\r\n                return servers\r\n            })\r\n        })\r\n        return () => socket.off(\"serverUpdate\")\r\n    }, [server, update, user, dm])\r\n\r\n    const homeClick = () => server && setServer()\r\n\r\n    const index = () => {\r\n        const iserver = user.servers.find(s => s._id === server?.id)\r\n        return user.servers.indexOf(iserver)\r\n    }\r\n\r\n    const providerValue = { setScreen, setServer, setUser, not: [notifications, setNotifications], user, setTheme, setView, setShowSettings }\r\n\r\n    return (\r\n        <ScreenContext.Provider value={providerValue}>\r\n            <div className={`platform ${showSettings && \"is-showing-settings\"} ${theme}`}>\r\n                {view}\r\n                {(showSettings || (showSettings === \"\")) && <UserSettings user={new User(user)} />}\r\n                <div className=\"screen\">\r\n                    <nav className=\"navigate\">\r\n                        <div style={{ marginTop: 10, marginBottom: 3 }} className={`server-block ${!server && \"clicked\"}`}>\r\n                            <div title=\"Home\" className=\"server\">\r\n                                <div onClick={homeClick} className={`home-button server-icon ${!server && \"isclicked\"}`}><HomeIcon /></div>\r\n                            </div>\r\n                            <div className=\"server-marker\" />\r\n                        </div>\r\n                        {notifications.map((n, i) => {\r\n                            const u = new User(n.user)\r\n                            if (notifications.findIndex(not => not.user._id === u.id) !== i) return null\r\n                            const dm = () => {\r\n                                setServer()\r\n                                setScreen(<Home onJoin={server => create(user, server)} update={update} dm={{ user: u }} user={user} />)\r\n                            }\r\n                            return (\r\n                                <div key={u.id} className=\"server-block\">\r\n                                    <div className={`server nt ${!n.saved && \"nta\"}`}>\r\n                                        <img onClick={dm} width=\"48\" height=\"48\" alt=\"icon\" src={u.displayAvatarURL(90)} className=\"server-icon\" />\r\n                                        <div className=\"notification\">{notifications.filter(not => not.user._id === u.id).length}</div>\r\n                                    </div>\r\n                                    <div className=\"server-marker\" />\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        <div className=\"border-bottom\" />\r\n                        <Server.LoadServers index={index()} me={user} servers={servers} click={click} isHome={!server} />\r\n                        <Add user={user} onCreate={create} view={setView} />\r\n                    </nav>\r\n                    {screen}\r\n                </div>\r\n            </div>\r\n            <Masks />\r\n        </ScreenContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Message","import { useState, useRef } from \"react\"\r\nimport \"./index.css\"\r\nimport Login from \"../login\"\r\nimport { link } from \"../../config.json\"\r\nimport Message from \"../message\"\r\n\r\nfunction Signup({ update }) {\r\n    const [animation, shrink] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n    const username = useRef()\r\n    const password = useRef()\r\n    const email = useRef()\r\n    const confirmPassword = useRef()\r\n    const login = () => {\r\n        shrink(\"shrink-me\")\r\n        setTimeout(() => update(<Login update={update} />), 200)\r\n    }\r\n    const createAccount = (e) => {\r\n        e.preventDefault()\r\n        const dataPassword = password.current.value\r\n        const dataEmail = email.current.value\r\n        if (password.current.value !== confirmPassword.current.value) return setError(\"Passwords don't match\")\r\n        fetch(`${link}createuser`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                username: username.current.value,\r\n                email: dataEmail,\r\n                password: dataPassword\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .catch(err => {\r\n                console.log(err)\r\n                setError(\"Error\")\r\n            })\r\n            .then(async result => {\r\n                if (result.error) return setError(result.error)\r\n                const user = await fetch(`${link}user?password=${dataPassword}&email=${dataEmail}`).then(res => res.json())\r\n                update(<Message update={update} user={user} />)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={`login signup ${animation}`}>\r\n            <h2 className=\"login-text signup-text\">Create an account</h2>\r\n            <form name=\"sign-up\">\r\n                <input autoComplete=\"off\" ref={username} className=\"login-input username\" placeholder=\"Username\" />\r\n                <input autoComplete=\"email\" ref={email} className=\"login-input signup-email\" placeholder=\"Email\" />\r\n                <input autoComplete=\"off\" ref={password} className=\"login-input signup-password\" type=\"password\" placeholder=\"Password\" />\r\n                <input autoComplete=\"off\" type=\"password\" ref={confirmPassword} className=\"login-input confirm\" placeholder=\"Confirm password\" />\r\n                <p className=\"no-account\">Already have an account? <span onClick={login}>login</span></p>\r\n                <button onClick={createAccount} className=\"button-login sign-up\">Create an account</button>\r\n            </form>\r\n            <p className=\"error-message\">{error}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup","import { useRef, useState, useContext } from \"react\"\r\nimport \"./index.css\"\r\nimport Signup from \"../signup\"\r\nimport { link } from \"../../config.json\"\r\nimport Message from \"../message\"\r\nimport { Update } from \"..\"\r\n\r\nfunction Login() {\r\n    const [animation, expand] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n    const update = useContext(Update)\r\n    const signUp = () => {\r\n        expand(\"expand-me\")\r\n        setTimeout(() => update(<Signup update={update} />), 200)\r\n    }\r\n    const password = useRef()\r\n    const email = useRef()\r\n\r\n    const login = (e) => {\r\n        e.preventDefault()\r\n        if (!password.current.value || !email.current.value) return\r\n        expand(\"waiting\")\r\n        fetch(`${link}user?password=${password.current.value}&email=${email.current.value}`).then(res => res.json())\r\n            .then(user => {\r\n                if (user.error) return setError(user.error)\r\n                expand(\"expand-all\")\r\n                setTimeout(() => update(<Message user={user} update={update} />), 300)\r\n            })\r\n            .catch(err => {\r\n                expand(\"\")\r\n                setError(err.toString())\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={`login ${animation}`}>\r\n            <h2 className=\"login-text\">Login to continue</h2>\r\n            <form name=\"login\">\r\n                <input id=\"email\" ref={email} className=\"login-input email\" required autoComplete=\"on\" type=\"email\" placeholder=\"Email\" />\r\n                <input id=\"password\" ref={password} autoComplete=\"on\" required className=\"login-input password\" type=\"password\" placeholder=\"Password\" />\r\n                <p className=\"no-account\">Don't have an account? <span onClick={signUp}>create one</span></p>\r\n                <button type=\"submit\" onClick={login} className=\"button-login sign-up\">Login</button>\r\n            </form>\r\n            <p className=\"error-message\">{error}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import { useState, createContext } from \"react\"\r\nimport Login from \"./login/index.jsx\"\r\nimport \"./index.css\"\r\n\r\nexport const Update = createContext()\r\n\r\nfunction App() {\r\n    const [state, setState] = useState(<Login />)\r\n\r\n    return (\r\n        <Update.Provider value={setState}>\r\n            <div className=\"main\">\r\n                <a className=\"github-link\" href=\"https://github.com/uwu404/discord-clone-client\">view source code</a>\r\n                {state}\r\n            </div>\r\n        </Update.Provider>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from \"./app\"\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"))\r\nroot.render(<App />)\r\n// strict mode causes components to rerender twice in dev mode\r\n\r\n"],"sourceRoot":""}